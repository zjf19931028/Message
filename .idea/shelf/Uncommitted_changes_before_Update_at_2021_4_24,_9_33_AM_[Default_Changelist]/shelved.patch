Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.future.message\">\n    <!-- 录音 -->\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.BLUETOOTH\" /> <!-- 启用应用启动设备发现或者操作蓝牙设备的超级管理员 -->\n    <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" /> <!-- 模糊定位权限，仅作用于6.0+ -->\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /> <!-- 精准定位权限，仅作用于6.0+ -->\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n\n    <application\n        android:name=\".util.App\"\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <activity android:name=\".TextViewLinkActivity\"></activity>\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <service android:name=\".base.service.MyService\"/>\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/AndroidManifest.xml	(date 1619227730000)
@@ -1,7 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.future.message">
-    <!-- 录音 -->
+    xmlns:tools="http://schemas.android.com/tools"
+    package="com.awesome.message">
+
+    <!--录音-->
     <uses-permission android:name="android.permission.RECORD_AUDIO" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
@@ -11,15 +13,15 @@
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
 
     <application
-        android:name=".util.App"
+        android:name=".base.App"
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
+        tools:replace="android:name"
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
-        <activity android:name=".TextViewLinkActivity"></activity>
-        <activity android:name=".MainActivity">
+        <activity android:name="com.awesome.message.MainActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
Index: app/src/main/java/com/future/message/java/SingleTon.java
===================================================================
--- app/src/main/java/com/future/message/java/SingleTon.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/SingleTon.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,17 +0,0 @@
-package com.future.message.java;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/19 15:24
- * Description: 静态内部类（线程安全、单例唯一、延迟加载）
- * 外部类调用时不会加载内部类，内部类不被加载则不会初始化INSTACE，不会占用内存。只有在调用getInstance()才会初始化Instance.
- */
-public class SingleTon {
-    private static class SingleTonHolder{
-        public static final SingleTon INSTANCE = new SingleTon();
-    }
-    public SingleTon getInstance(){
-        return SingleTonHolder.INSTANCE;
-    }
-}
Index: app/src/main/java/com/future/message/algorithm/SolutionString.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/SolutionString.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/SolutionString.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,233 +0,0 @@
-package com.future.message.algorithm;
-
-import android.text.TextUtils;
-
-import com.future.message.util.ShowLogUtil;
-
-import java.util.HashMap;
-import java.util.Map;
-import java.util.Set;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/15 13:51
- * Description:
- */
-public class SolutionString {
-    // 翻转字符串
-    // 双指针
-    // 时间复杂度O(n)
-    // 空间复杂度O(1)
-    public static char[] reverseString(char[] s) {
-        int length = s.length;
-        for (int i = 0; i < length / 2; i++) {
-            char temp = s[i];
-            s[i] = s[length - 1 - i];
-            s[length - 1 - i] = temp;
-        }
-        return s;
-    }
-
-    // 整数翻转
-    // 时间复杂度O(n)
-    // 空间复杂度O(1)
-    // 弹出和推入数组&移除前进行检查？
-    // SolutionString.reverse(-2147483648);
-    public static int reverse(int x) {
-        boolean isNegative = (x < 0);
-        long expandX = x;
-        expandX = Math.abs(expandX);
-        String s = String.valueOf(expandX);
-        char[] chars = s.toCharArray();
-        char[] reverseString = reverseString(chars);
-        long value = Long.valueOf(String.valueOf(reverseString));
-        if (isNegative) value = -1 * value;
-        if (value > Integer.MAX_VALUE || value < Integer.MIN_VALUE) {
-            return 0;
-        } else {
-            return (int) value;
-        }
-    }
-
-    // 字符串中的第一个唯一字符
-    // 使用哈希表存储频数
-    // 时间复杂度O(n)
-    // 空间复杂度O(∣Σ∣)
-    // 使用哈希表存储索引
-    // 时间复杂度O(n)
-    // 空间复杂度O(∣Σ∣)
-    // 队列?
-    // SolutionString.firstUniqChar("loveleetcode");
-    public static int firstUniqChar(String s) {
-//        Map<Character, Integer> hashMap = new HashMap<>();
-//        for (int i = 0; i < s.length(); i++) {
-//            hashMap.put(s.charAt(i), hashMap.getOrDefault(s.charAt(i), 0) + 1);
-//        }
-//        for (int i = 0; i < s.length(); i++) {
-//            if (hashMap.get(s.charAt(i)) == 1) return i;
-//
-//        }
-//        return -1;
-        Map<Character, Integer> hashMap = new HashMap<>();
-        int length = s.length();
-        for (int i = 0; i < length; i++) {
-            char ch = s.charAt(i);
-            if (hashMap.containsKey(ch)) {
-                hashMap.put(ch, -1);
-            } else {
-                hashMap.put(ch, i);
-            }
-        }
-        int first = -1;
-        for (Map.Entry<Character, Integer> entry : hashMap.entrySet()) {
-            Integer value = entry.getValue();
-            if (value != -1 && value < length) {
-                first = value;
-            }
-        }
-        return first;
-
-
-//        Map<Character, Integer> position = new HashMap<Character, Integer>();
-//        int n = s.length();
-//        for (int i = 0; i < n; ++i) {
-//            char ch = s.charAt(i);
-//            if (position.containsKey(ch)) {
-//                position.put(ch, -1);
-//            } else {
-//                position.put(ch, i);
-//            }
-//        }
-//        int first = n;
-//        for (Map.Entry<Character, Integer> entry : position.entrySet()) {
-//            int pos = entry.getValue();
-//            if (pos != -1 && pos < first) {
-//                first = pos;
-//            }
-//        }
-//        if (first == n) {
-//            first = -1;
-//        }
-//        return first;
-    }
-
-    // 有效的字母异位词
-    // 排序
-    // 数组
-    // 时间复杂度O(m+n)
-    // 空间复杂度O(S)
-    public static boolean isAnagram(String s, String t) {
-        if (s.length() != t.length()) return false;
-        int[] letter = new int[26];
-        for (int i = 0; i < s.length(); i++) {
-            char ch = s.charAt(i);
-            letter[ch - 'a']++;
-        }
-        for (int i = 0; i < t.length(); i++) {
-            char ch = t.charAt(i);
-            letter[ch - 'a']--;
-            if (letter[ch - 'a'] < 0) return false;
-        }
-        return true;
-    }
-
-    // 验证回文串
-    // 筛选 + 判断
-    // 时间复杂度O(∣s|)
-    // 空间复杂度O(∣s|)
-    // 在原字符串上直接判断
-    // 时间复杂度O(∣s|)
-    // 空间复杂度O(1)
-    // SolutionString.isPalindrome(".,")
-    public static boolean isPalindrome(String s) {
-//        StringBuffer sb = new StringBuffer();
-//        for (int i = 0; i < s.length(); i++) {
-//            if (Character.isLetterOrDigit(s.charAt(i)))
-//                sb.append(s.charAt(i));
-//        }
-//        String newStr = sb.toString();
-//        int newStrLength = sb.toString().length();
-//        for (int i = 0; i < newStrLength / 2; i++) {
-//            if (newStr.charAt(i) != newStr.charAt(newStrLength - i)) return false;
-//        }
-//        return true;
-        if (s == null) return false;
-        int length = s.length();
-        int left = 0;
-        int right = length - 1;
-        while (left < right) {
-            while (!Character.isLetterOrDigit(s.charAt(left))) {
-                if (left == right) return true;
-                if (left > right - 1) break;
-                left++;
-            }
-            while (!Character.isLetterOrDigit(s.charAt(right))) {
-                right--;
-                if (right < left + 1) break;
-            }
-            if (Character.toLowerCase(s.charAt(left)) != Character.toLowerCase(s.charAt(right)))
-                return false;
-            left++;
-            right--;
-        }
-        return true;
-    }
-
-    // 字符串转换整数
-    //
-//    public static boolean myAtoi(String s) {
-//
-//    }
-
-    // 实现strStr()
-    //
-    public static int strStr(String haystack, String needle) {
-        if (haystack == null || needle == null)
-            return -1;
-        if (needle.length() == 0)
-            return 0;
-        char firstLitter = needle.charAt(0);
-        int haystackLength = haystack.length();
-        int needleLength = needle.length();
-        for (int i = 0; i < haystack.length(); i++) {
-            if (firstLitter == haystack.charAt(i)) {
-                if (haystackLength >= i + needleLength) {
-                    if (haystack.substring(i, i + needleLength).equals(needle))
-                        return i;
-                } else {
-                    return -1;
-                }
-            }
-        }
-        return -1;
-    }
-
-    // 外观数列
-//    public static String countAndSay(int n) {
-//    }
-
-    // 最长公共前缀
-    // SolutionString.longestCommonPrefix(new String[]{"dog","racecar","car"});
-    public static String longestCommonPrefix(String[] strs) {
-        if (strs == null || strs.length == 0) return "";
-        String prefix = strs[0];
-        for (int i = 0; i < strs.length; i++) {
-            prefix = longestCommonPrefix(prefix, strs[i]);
-            if (prefix.length() == 0)
-                return "";
-        }
-        return prefix;
-    }
-
-
-    public static String longestCommonPrefix(String s1, String s2) {
-        int length = Math.min(s1.length(), s2.length());
-        int index = 0;
-        while (length > 0 && (s1.charAt(index) == s2.charAt(index))) {
-            index++;
-            length--;
-        }
-        return s1.substring(0, index);
-    }
-}
Index: app/src/main/java/com/future/message/java/ThreadUtil.java
===================================================================
--- app/src/main/java/com/future/message/java/ThreadUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/ThreadUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,18 +0,0 @@
-package com.future.message.java;
-
-import java.util.concurrent.Executors;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/19 11:59
- * Description:
- */
-public class ThreadUtil {
-    public void thread(){
-        Executors.newCachedThreadPool();
-//        Executors.newFixedThreadPool();
-//        Executors.newScheduledThreadPool();
-        Executors.newSingleThreadExecutor();
-    }
-}
Index: app/src/main/java/com/future/message/base/Test.java
===================================================================
--- app/src/main/java/com/future/message/base/Test.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/base/Test.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,37 +0,0 @@
-package com.future.message.base;
-
-import com.future.message.util.ShowLogUtil;
-
-import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/26 15:30
- * Description:
- */
-public class Test {
-    public static void test(Class<?> clazz) {
-        try {
-            Object obj = clazz.getConstructor(new Class[]{}).newInstance(new Object[]{});
-            for (Method method : clazz.getDeclaredMethods()) {
-                ShowLogUtil.info("method="+method.getName());
-                HelloWorld helloWorld = method.getAnnotation(HelloWorld.class);
-                if (helloWorld != null) {
-                    String name = helloWorld.name();
-                    ShowLogUtil.info(name);
-                    method.invoke(obj, name);
-                }
-            }
-        } catch (IllegalAccessException e) {
-            e.printStackTrace();
-        } catch (InstantiationException e) {
-            e.printStackTrace();
-        } catch (InvocationTargetException e) {
-            e.printStackTrace();
-        } catch (NoSuchMethodException e) {
-            e.printStackTrace();
-        }
-    }
-}
Index: app/src/main/java/com/future/message/receiver/callback/ScanBtCallBack.java
===================================================================
--- app/src/main/java/com/future/message/receiver/callback/ScanBtCallBack.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/receiver/callback/ScanBtCallBack.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,19 +0,0 @@
-package com.future.message.receiver.callback;
-
-import android.bluetooth.BluetoothDevice;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/23 15:19
- * Description: 蓝牙扫描回调
- */
-public interface ScanBtCallBack {
-    void onScanStarted();
-    void onScanFinished();
-    void onScanning(BluetoothDevice device);
-    void onBondRequest(BluetoothDevice device);
-    void onBondFail();
-    void onBondBonding();
-    void onBondSuccess();
-}
Index: app/src/main/java/com/future/message/util/ShowLogUtil.java
===================================================================
--- app/src/main/java/com/future/message/util/ShowLogUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/ShowLogUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,91 +0,0 @@
-package com.future.message.util;
-
-import android.content.pm.ApplicationInfo;
-import android.util.Log;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/22 15:42
- * Description:
- */
-public class ShowLogUtil {
-    private static final String TAG = "jlog";
-    private static final int LENGTH = 1024;
-    private static final String DEVIDER = "--------------------";
-
-    public ShowLogUtil() {
-    }
-
-    private static boolean isDebug() {
-        try {
-            ApplicationInfo info = App.getInstance().getApplicationInfo();
-            return (info.flags & 2) != 0;
-        } catch (Exception var1) {
-            return false;
-        }
-    }
-
-    public static void info(Object log) {
-        info(log.toString());
-    }
-
-    public static void info(String log) {
-        info("jlog", log);
-    }
-
-    public static void info(String tag, String log) {
-        if (isDebug()) {
-            int a = log.length() / 1024;
-            int b = log.length() % 1024;
-
-            for(int i = 0; i < a; ++i) {
-                Log.i(tag, log.substring(i * 1024, (i + 1) * 1024));
-            }
-
-            Log.i(tag, log.substring(a * 1024, a * 1024 + b));
-        }
-    }
-
-    public static void debug(Object log) {
-        debug(log.toString());
-    }
-
-    public static void debug(String log) {
-        debug("jlog", log);
-    }
-
-    public static void debug(String tag, String log) {
-        if (isDebug()) {
-            int a = log.length() / 1024;
-            int b = log.length() % 1024;
-
-            for(int i = 0; i < a; ++i) {
-                Log.d(tag, log.substring(i * 1024, (i + 1) * 1024));
-            }
-
-            Log.d(tag, log.substring(a * 1024, a * 1024 + b));
-        }
-    }
-
-    public static void error(Object log) {
-        error(log.toString());
-    }
-
-    public static void error(String log) {
-        error("jlog", log);
-    }
-
-    public static void error(String tag, String log) {
-        if (isDebug()) {
-            int a = log.length() / 1024;
-            int b = log.length() % 1024;
-
-            for(int i = 0; i < a; ++i) {
-                Log.e(tag, log.substring(i * 1024, (i + 1) * 1024));
-            }
-
-            Log.e(tag, log.substring(a * 1024, a * 1024 + b));
-        }
-    }
-}
Index: app/src/main/java/com/future/message/util/ByteArrayUtil.java
===================================================================
--- app/src/main/java/com/future/message/util/ByteArrayUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/ByteArrayUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,60 +0,0 @@
-package com.future.message.util;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/22 16:17
- * Description: 字节数组工具类
- */
-public class ByteArrayUtil {
-    public static byte[] int2ByteArray(int i) {
-        byte[] byteArray = new byte[4];
-        byteArray[0] = (byte) (i & 0xFF);
-        byteArray[1] = (byte) ((i & 0xFF00) >> 8);
-        byteArray[2] = (byte) ((i & 0xFF0000) >> 16);
-        byteArray[3] = (byte) ((i & 0xFF000000) >> 24);
-        return byteArray;
-    }
-
-    public static int byteArray2Int(byte[] byteArray) {
-        return (0xFF & byteArray[0])
-                | (0xFF00 & (byteArray[1] << 8))
-                | (0xFF0000 & (byteArray[2] << 16))
-                | (0xFF000000 & (byteArray[3] << 24));
-    }
-
-    public static byte[] long2ByteArray(long l) {
-        byte[] byteArray = new byte[8];
-        byteArray[0] = (byte) (l & 0xFF);
-        byteArray[1] = (byte) ((l >> 8) & 0xFF);
-        byteArray[2] = (byte) ((l >> 16) & 0xFF);
-        byteArray[3] = (byte) ((l >> 24) & 0xFF);
-        byteArray[4] = (byte) ((l >> 32) & 0xFF);
-        byteArray[5] = (byte) ((l >> 40) & 0xFF);
-        byteArray[6] = (byte) ((l >> 48) & 0xFF);
-        byteArray[7] = (byte) ((l >> 56) & 0xFF);
-        return byteArray;
-    }
-
-    public static long byteArray2Long(byte[] byteArray) {
-        return (0xFFL & (long) byteArray[0])
-                | (0xFF00L & ((long) byteArray[1] << 8))
-                | (0xFF0000L & ((long) byteArray[2] << 16))
-                | (0xFF000000L & ((long) byteArray[3] << 24))
-                | (0xFF00000000L & ((long) byteArray[4] << 32))
-                | (0xFF0000000000L & ((long) byteArray[5] << 40))
-                | (0xFF000000000000L & ((long) byteArray[6] << 48))
-                | (0xFF00000000000000L & ((long) byteArray[7] << 56));
-    }
-
-    public static byte[] boolean2ByteArray(boolean b) {
-        byte[] byteArray = new byte[1];
-        byteArray[0] = (byte) (b ? 0x01 : 0x00);
-        return byteArray;
-    }
-
-    public static boolean byteArray2Boolean(byte[] byteArray) {
-        return byteArray[0] == 0x01;
-    }
-
-}
Index: app/src/main/java/com/future/message/util/MediaRecorderManager.java
===================================================================
--- app/src/main/java/com/future/message/util/MediaRecorderManager.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/MediaRecorderManager.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,117 +0,0 @@
-package com.future.message.util;
-
-import android.media.MediaRecorder;
-import android.os.Handler;
-
-import java.io.File;
-import java.io.IOException;
-
-/**
- * Author: JfangZ
- * Email:zhangjin
- * gfang@jeejio.com
- * Date: 2021/2/4 14:26
- * Description: 录音管理类
- */
-public enum MediaRecorderManager {
-    SINGLETON;
-    public static final int MAX_LENGTH = 1000 * 60;
-    private MediaRecorder mMediaRecorder;
-    private IOnMediaRecordListener mListener;
-    private File mOriginalFile;
-    private Handler mHandler;
-
-    MediaRecorderManager() {
-        mHandler = new Handler();
-    }
-
-    /**
-     * Author: JfangZ
-     * Email:zhangjingfang@jeejio.com
-     * Date: 2021/2/4 15:23
-     * Description: 开始录音
-     */
-    public void startRecord(IOnMediaRecordListener listener) {
-        if (mMediaRecorder == null)
-            mMediaRecorder = new MediaRecorder();
-        mListener = listener;
-        try {
-            mMediaRecorder.setAudioSource(MediaRecorder.AudioSource.MIC);
-            mMediaRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);
-            mMediaRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AAC);
-            String mOriginalFilePath = FilePathUtil.getMediaRecorderLocalPath();
-            mOriginalFile = new File(mOriginalFilePath);
-            if (!mOriginalFile.exists()) mOriginalFile.getParentFile().mkdirs();
-            mOriginalFile.createNewFile();
-            mMediaRecorder.setOutputFile(mOriginalFilePath);
-            mMediaRecorder.setMaxDuration(MAX_LENGTH);
-            mMediaRecorder.prepare();
-            mMediaRecorder.start();
-            if (mListener != null)
-                mListener.onStart();
-        } catch (IOException e) {
-            e.printStackTrace();
-            if (mListener != null)
-                mListener.onError(e);
-        }
-    }
-
-    /**
-     * Author: JfangZ
-     * Email:zhangjingfang@jeejio.com
-     * Date: 2021/2/4 15:25
-     * Description: 停止录音
-     */
-    public void stopRecord() {
-        if (mMediaRecorder != null) {
-            try {
-                mMediaRecorder.stop();
-                mMediaRecorder.reset();
-                mMediaRecorder.release();
-                mMediaRecorder = null;
-                if (mListener != null)
-                    mListener.onStop();
-                String encryptFilePath = FilePathUtil.getMediaRecorderEncryptLocalPath();
-                File encryptFile = new File(encryptFilePath);
-                if (!encryptFile.exists()) encryptFile.getParentFile().mkdirs();
-                encryptFile.createNewFile();
-                // 密钥
-                String aesSecret = EncryptUtil.generateAesSecret();
-                // 加密录音文件
-                EncryptUtil.encryptFile(mOriginalFile, encryptFile, aesSecret);
-                // 解密
-                EncryptUtil.decryptFile(encryptFile, aesSecret);
-            } catch (Exception e) {
-                mMediaRecorder.reset();
-                mMediaRecorder.release();
-                mMediaRecorder = null;
-                if (mListener != null)
-                    mListener.onError(e);
-            }
-
-        }
-    }
-
-    public interface IOnMediaRecordListener {
-        void onStart();
-
-        void onStop();
-
-        void onError(Exception e);
-
-        void onVolumeChange(int curVolume);
-    }
-
-    private class CurVolumeRunnable implements Runnable {
-
-        @Override
-        public void run() {
-            if (mMediaRecorder == null || mListener == null) return;
-            int maxAmplitude = mMediaRecorder.getMaxAmplitude();
-            mListener.onVolumeChange(maxAmplitude);
-
-            // 每隔 100ms 获取一次
-            mHandler.postDelayed(this,100);
-        }
-    }
-}
Index: app/src/main/java/com/future/message/algorithm/bean/Pair.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/bean/Pair.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/bean/Pair.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,33 +0,0 @@
-package com.future.message.algorithm.bean;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/17 10:48
- * Description:
- */
-public class Pair {
-    int key;
-    int value;
-
-    public Pair(int key, int value) {
-        this.key = key;
-        this.value = value;
-    }
-
-    public int getKey() {
-        return key;
-    }
-
-    public void setKey(int key) {
-        this.key = key;
-    }
-
-    public int getValue() {
-        return value;
-    }
-
-    public void setValue(int value) {
-        this.value = value;
-    }
-}
Index: app/src/main/java/com/future/message/TextViewLinkActivity.java
===================================================================
--- app/src/main/java/com/future/message/TextViewLinkActivity.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/TextViewLinkActivity.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,97 +0,0 @@
-package com.future.message;
-
-import androidx.appcompat.app.AppCompatActivity;
-
-import android.content.res.ColorStateList;
-import android.content.res.XmlResourceParser;
-import android.graphics.Color;
-import android.graphics.Typeface;
-import android.graphics.drawable.Drawable;
-import android.os.Bundle;
-import android.text.SpannableString;
-import android.text.Spanned;
-import android.text.style.AbsoluteSizeSpan;
-import android.text.style.BackgroundColorSpan;
-import android.text.style.BulletSpan;
-import android.text.style.ForegroundColorSpan;
-import android.text.style.ImageSpan;
-import android.text.style.RelativeSizeSpan;
-import android.text.style.ScaleXSpan;
-import android.text.style.StrikethroughSpan;
-import android.text.style.StyleSpan;
-import android.text.style.SubscriptSpan;
-import android.text.style.TextAppearanceSpan;
-import android.text.style.TypefaceSpan;
-import android.text.style.URLSpan;
-import android.text.style.UnderlineSpan;
-import android.view.View;
-import android.widget.TextView;
-
-import org.xmlpull.v1.XmlPullParserException;
-
-import java.io.IOException;
-
-public class TextViewLinkActivity extends AppCompatActivity {
-
-    private TextView mTextView;
-    private SpannableString mSpanStr;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_text_view_link);
-        mTextView = findViewById(R.id.my_textview);
-        mSpanStr = new SpannableString("字体monospace字体serif字体大小像素dp一半两倍字体颜色紫红色蓝绿色正常粗体斜体粗斜体下划线删除线x1x2电话邮件短信彩信地图X轴综合/bot");
-        // 设置字体 TypefaceSpan
-        mSpanStr.setSpan(new TypefaceSpan("monospace"),2,11, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new TypefaceSpan("serif"),13,18, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new AbsoluteSizeSpan(20),22,24, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new AbsoluteSizeSpan(20,true),24,26, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new RelativeSizeSpan(0.5f),26,28, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new RelativeSizeSpan(2.0f),28,30, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new ForegroundColorSpan(Color.MAGENTA),34,37, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new BackgroundColorSpan(Color.CYAN),37,40, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new StyleSpan(Typeface.NORMAL),40,42, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new StyleSpan(Typeface.BOLD),42,44, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new StyleSpan(Typeface.ITALIC),44,46, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new StyleSpan(Typeface.BOLD_ITALIC),46,49, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new UnderlineSpan(),49,52, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new StrikethroughSpan(),52,55, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new SubscriptSpan(),55,56, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new SubscriptSpan(),57,58, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new URLSpan("tel:15236609899"),59,61, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new URLSpan("mailto:webmaster@google.com"),61,63, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new URLSpan("sms:4155551212"),63,65, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new URLSpan("mms:4155551212"),65,67, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new URLSpan("geo:38.899533,-77.036476"),67,69, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new ScaleXSpan(2.0f),69,71, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-//        ColorStateList csllink = null;
-//        ColorStateList csl = null;
-//        XmlResourceParser xppcolor=getResources().getXml (R.color.colorAccent);
-//        try {
-//            csl= ColorStateList.createFromXml(getResources(),xppcolor);
-//        }catch(XmlPullParserException e){
-//            // TODO: handle exception
-//            e.printStackTrace();
-//        }catch(IOException e){
-//            // TODO: handle exception
-//            e.printStackTrace();
-//        }
-//        XmlResourceParser xpplinkcolor=getResources().getXml(Color.YELLOW);
-//        try {
-//            csllink= ColorStateList.createFromXml(getResources(),xpplinkcolor);
-//        }catch(XmlPullParserException e){
-//            // TODO: handle exception
-//            e.printStackTrace();
-//        }catch(IOException e){
-//            // TODO: handle exception
-//            e.printStackTrace();
-//        }
-//        mSpanStr.setSpan(new TextAppearanceSpan("monospace",Typeface.BOLD,30,csl,csllink),71,73, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mSpanStr.setSpan(new BulletSpan(android.text.style.BulletSpan.STANDARD_GAP_WIDTH,Color.GREEN), 71,73, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        Drawable drawable = getResources().getDrawable(R.drawable.ic_launcher_background);
-        drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());
-        mSpanStr.setSpan(new ImageSpan(getResources().getDrawable(R.drawable.ic_launcher_background)), 73,77,  Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-        mTextView.setText(mSpanStr);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/future/message/algorithm/bean/ListNode.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/bean/ListNode.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/bean/ListNode.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,21 +0,0 @@
-package com.future.message.algorithm.bean;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/16 15:32
- * Description:
- */
-public class ListNode {
-    public int val;
-    public ListNode next;
-
-    public ListNode(int x) {
-        val = x;
-    }
-
-    public ListNode(int val, ListNode next) {
-        this.val = val;
-        this.next = next;
-    }
-}
Index: app/src/main/java/com/future/message/okhttp/baseuse/OKHttpBaseUse.java
===================================================================
--- app/src/main/java/com/future/message/okhttp/baseuse/OKHttpBaseUse.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/okhttp/baseuse/OKHttpBaseUse.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,181 +0,0 @@
-package com.future.message.okhttp.baseuse;
-
-import org.jetbrains.annotations.NotNull;
-import org.jetbrains.annotations.Nullable;
-
-import java.io.File;
-import java.io.IOException;
-
-import okhttp3.Call;
-import okhttp3.Callback;
-import okhttp3.FormBody;
-import okhttp3.Headers;
-import okhttp3.MediaType;
-import okhttp3.OkHttpClient;
-import okhttp3.Request;
-import okhttp3.RequestBody;
-import okhttp3.Response;
-import okhttp3.ResponseBody;
-import okio.BufferedSink;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/30 14:42
- * Description:
- */
-public class OKHttpBaseUse {
-
-    private OkHttpClient mOkHttpClient = new OkHttpClient();
-
-    // 异步GET请求
-    void getAsync(String url) {
-        Request request = new Request.Builder()
-                .url(url)
-                .get()//默认，可不写
-                .build();
-        Call call = mOkHttpClient.newCall(request);
-        call.enqueue(new Callback() {
-            @Override
-            public void onFailure(@NotNull Call call, @NotNull IOException e) {
-
-            }
-
-            @Override
-            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
-//                response.body().string();
-            }
-        });
-    }
-
-    // 同步GET请求
-    void getSync(String url) {
-        Request request = new Request.Builder()
-                .url(url)
-                .build();
-        final Call call = mOkHttpClient.newCall(request);
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                try {
-                    Response response = call.execute();
-//                    response.body().string();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-        }).start();
-    }
-
-    // post提交String
-    void postString(String url) {
-        MediaType mediaType = MediaType.get("application/json;charset=utf-8");
-        String string = "I am Jdqm.";
-        RequestBody requestBody = RequestBody.create(mediaType, string);
-        Request request = new Request.Builder()
-                .url(url)
-                .post(requestBody)
-                .build();
-        mOkHttpClient.newCall(request).enqueue(new Callback() {
-            @Override
-            public void onFailure(@NotNull Call call, @NotNull IOException e) {
-
-            }
-
-            @Override
-            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
-                Headers headers = response.headers();
-                for (int i = 0; i < headers.size(); i++) {
-//                    headers.name(i);
-//                    headers.value(i);
-                }
-            }
-        });
-    }
-
-    // post提交流
-    void postStream(String url) {
-        RequestBody requestBody = new RequestBody() {
-            @Nullable
-            @Override
-            public MediaType contentType() {
-                return MediaType.parse("application/json;charset=utf-8");
-            }
-
-            @Override
-            public void writeTo(@NotNull BufferedSink bufferedSink) throws IOException {
-                bufferedSink.writeUtf8("I am Jdqm.");
-            }
-        };
-        Request request = new Request.Builder()
-                .url(url)
-                .post(requestBody)
-                .build();
-        mOkHttpClient.newCall(request).enqueue(new Callback() {
-            @Override
-            public void onFailure(@NotNull Call call, @NotNull IOException e) {
-
-            }
-
-            @Override
-            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
-                Headers headers = response.headers();
-                for (int i = 0; i < headers.size(); i++) {
-//                    headers.name(i);
-//                    headers.value(i);
-                }
-            }
-        });
-    }
-
-    // post提交文件
-    void postFile(String url) {
-        MediaType mediaType = MediaType.get("text/x-markdown;charset=utf-8");
-        File file = new File("");
-        RequestBody requestBody = RequestBody.create(mediaType, file);
-        Request request = new Request.Builder()
-                .url(url)
-                .post(requestBody)
-                .build();
-        mOkHttpClient.newCall(request).enqueue(new Callback() {
-            @Override
-            public void onFailure(@NotNull Call call, @NotNull IOException e) {
-
-            }
-
-            @Override
-            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
-                Headers headers = response.headers();
-                for (int i = 0; i < headers.size(); i++) {
-//                    headers.name(i);
-//                    headers.value(i);
-                }
-            }
-        });
-    }
-
-    void postForm(String url) {
-        RequestBody requestBody = new FormBody.Builder()
-                .add("search", "Jurassic")
-                .build();
-        Request request = new Request.Builder()
-                .url(url)
-                .post(requestBody)
-                .build();
-        mOkHttpClient.newCall(request).enqueue(new Callback() {
-            @Override
-            public void onFailure(@NotNull Call call, @NotNull IOException e) {
-
-            }
-
-            @Override
-            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
-                Headers headers = response.headers();
-                for (int i = 0; i < headers.size(); i++) {
-//                    headers.name(i);
-//                    headers.value(i);
-                }
-            }
-        });
-    }
-}
Index: app/src/main/java/com/future/message/receiver/callback/ConnectBtCallBack.java
===================================================================
--- app/src/main/java/com/future/message/receiver/callback/ConnectBtCallBack.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/receiver/callback/ConnectBtCallBack.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,12 +0,0 @@
-package com.future.message.receiver.callback;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/2/25 17:08
- * Description:蓝牙连接回调
- */
-public interface ConnectBtCallBack {
-    void onConnectSuccess();
-    void onConnectFail();
-}
Index: app/src/main/java/com/future/message/algorithm/SolutionArray.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/SolutionArray.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/SolutionArray.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,358 +0,0 @@
-package com.future.message.algorithm;
-
-import android.os.Build;
-import android.text.TextUtils;
-
-import androidx.annotation.RequiresApi;
-
-import com.future.message.util.ShowLogUtil;
-
-import java.util.Arrays;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/22 18:51
- * Description:
- */
-public class SolutionArray {
-    // 删除排序数组中的重复项
-    // 双指针
-    // 时间复杂的O(N)
-    // 空间复杂的O(1)
-    public static int removeDuplicates(int[] nums) {
-        // 定义双指针，第一个指针代表不重复的下标，即index，第二个指针代表每次循环向后推进的下标，即i
-        // 比较两个指针的值，如果相等，什么操作都不用做，继续向后循环。
-        // 如果不相等，需要把第一个指针向后对进一个，然后赋值为第二个指针的值
-        // 直到循环结束，第一个指针的数值增加1，这跟下标是从0开始有关。
-        int index = 0;
-        for (int i = 1; i < nums.length; i++) {
-            if (nums[index] != nums[i]) {
-                index++;
-                nums[index] = nums[i];
-            }
-        }
-        return ++index;
-    }
-
-    // 旋转数组
-    // 使用额外的数组
-    // 时间复杂的O(N)
-    // 空间复杂的O(N)
-    // 数组翻转
-    // 时间复杂的O(2N)
-    // 空间复杂的O(1)
-    public static void rotate(int[] nums, int k) {
-//        k = k % nums.length;
-//        int n = nums.length;
-//        int[] newArr = new int[n];
-//        for (int i = 0; i < n; ++i) {
-//            newArr[(i + k) % n] = nums[i];
-//        }
-//        for (int i = 0; i < nums.length; i++) {
-//            ShowLogUtil.info("newArr[" + i + "]=" + newArr[i]);
-//        }
-
-//        k = k % nums.length;
-//        reverse(nums, 0, nums.length - 1);
-//        reverse(nums, 0, k - 1);
-//        reverse(nums, k, nums.length - 1);
-//        for (int i = 0; i < nums.length; i++) {
-//            ShowLogUtil.info("nums[" + i + "]=" + nums[i]);
-//        }
-
-        // 时间复杂的O(N平方)
-        // 空间复杂的O(1)
-        //        k = k % nums.length;
-//        int temp = 0;
-//        for (int j = 0; j < k; j++) {
-//            temp = nums[nums.length - 1];
-//            for (int i = (nums.length - 1); i > 0; i--) {
-//                nums[i] = nums[i - 1];
-//            }
-//            nums[0] = temp;
-//        }
-    }
-
-    public static void reverse(int[] nums, int start, int end) {
-        while (start < end) {
-            int temp = nums[start];
-            nums[start] = nums[end];
-            nums[end] = temp;
-            start++;
-            end--;
-        }
-    }
-
-    //  存在重复元素
-    // 排序
-    // 时间复杂的O(NlogN)
-    // 空间复杂的O(logN)
-    // 哈希表
-    // 时间复杂的O(N)
-    // 空间复杂的O(1)
-    //  int[] a = new int[]{0, 1, 2, 3, 4, 5, 6};
-    //  boolean containsDuplicate = Solution.containsDuplicate(a);
-    public static boolean containsDuplicate(int[] nums) {
-        Arrays.sort(nums);
-        for (int i = 0; i < nums.length - 2; i++) {
-            if (nums[i] == nums[i + 1]) {
-                return true;
-            }
-        }
-        return false;
-
-//        Set<Integer> hashSet = new HashSet<>();
-//        for (int n : nums) {
-//            if (!hashSet.add(n))
-//                return true;
-//        }
-//        return false;
-    }
-
-//    // 两个数组的交集
-//    @RequiresApi(api = Build.VERSION_CODES.N)
-//    public static int[] intersect(int[] nums1, int[] nums2) {
-//        if (nums1.length > nums2.length) {
-//            return intersect(nums2, nums1);
-//        }
-//        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
-//        // 遍历第一个数组放入到哈希表
-//        for (int num : nums1) {
-//            int count = map.getOrDefault(num, 0) + 1;
-//            map.put(num, count);
-//        }
-//        for (int i = 0; i < intersection.length; i++) {
-//            ShowLogUtil.info("[" + i + "]=" + intersection[i]);
-//        }
-//
-//        // 创建一个等比例数组
-//        int[] intersection = new int[nums1.length];
-//        int index = 0;
-//        for (int num : nums2) {
-//            int count = map.getOrDefault(num, 0);
-//            if (count > 0) {
-//                intersection[index++] = num;
-//                count--;
-//                if (count > 0) {
-//                    map.put(num, count);
-//                } else {
-//                    map.remove(num);
-//                }
-//            }
-//        }
-//        for (int i = 0; i < intersection.length; i++) {
-//            ShowLogUtil.info("[" + i + "]=" + intersection[i]);
-//        }
-//        ShowLogUtil.info("=============");
-//        return Arrays.copyOfRange(intersection, 0, index);
-//    }
-
-
-    // 两个数组的交集
-    //
-    // 时间复杂度O(m+n)
-    // 空间复杂度O(min(m,n))
-    // 排序+双指针
-    // 时间复杂度
-    // 空间复杂度min(m,n)
-    @RequiresApi(api = Build.VERSION_CODES.N)
-    public static int[] intersect(int[] nums1, int[] nums2) {
-
-        if (nums1.length > nums2.length) {
-            return intersect(nums2, nums1);
-        }
-        Map<Integer, Integer> hashMap = new HashMap<>();
-        for (int num : nums1) {
-            int count = hashMap.getOrDefault(num, 0) + 1;
-            hashMap.put(num, count);
-        }
-        int[] intersection = new int[nums1.length];
-        int index = 0;
-        for (int num : nums2) {
-            int count = hashMap.getOrDefault(num, 0);
-            if (count > 0) {
-                intersection[index++] = num;
-                count--;
-                if (count > 0) {
-                    hashMap.put(num, count);
-                } else {
-                    hashMap.remove(num);
-                }
-            }
-        }
-        return Arrays.copyOfRange(intersection, 0, index);
-
-
-//        Arrays.sort(nums1);
-//        Arrays.sort(nums2);
-//        int length1 = nums1.length;
-//        int length2 = nums2.length;
-//        int[] intersection = new int[Math.min(length1, length2)];
-//        int index1 = 0;
-//        int index2 = 0;
-//        int index = 0;
-//        while (index1 < length1 && index2 < length2) {
-//            if (nums1[index1] < nums2[index2]) {
-//                index1++;
-//            }
-//            if (nums1[index1] > nums2[index2]) {
-//                index2++;
-//            }
-//            if (nums1[index1] == nums2[index2]) {
-//                intersection[index] = nums1[index1];
-//                ShowLogUtil.info("intersection[" + index + "]=" + intersection[index]);
-//                index1++;
-//                index2++;
-//                index++;
-//            }
-//        }
-//        return Arrays.copyOfRange(intersection, 0, index);
-    }
-
-    // 加一
-    // 数学算法
-    // 时间复杂度O(n)
-    // 空间复杂度O(1)
-    public static int[] plusOne(int[] digits) {
-        for (int i = digits.length - 1; i >= 0; i--) {
-            digits[i]++;
-            digits[i] = digits[i] % 10;
-            ShowLogUtil.info("[" + i + "]=" + digits[i]);
-            if (digits[i] != 0) return digits;
-        }
-        digits = new int[digits.length + 1];
-        digits[0] = 1;
-        return digits;
-    }
-
-    // 移动零
-    // 双指针
-    // 时间复杂度O(n)
-    // 空间复杂度O(1)
-    public static int[] moveZeroes(int[] nums) {
-        int zeroSum = 0;
-        int index = 0;
-        for (int i = 0; i < nums.length; i++) {
-            if (nums[i] == 0) {
-                zeroSum++;
-            } else {
-                nums[index++] = nums[i];
-            }
-        }
-        while (zeroSum > 0) {
-            nums[nums.length - zeroSum] = 0;
-            zeroSum--;
-        }
-        return nums;
-    }
-
-    // 两数之和
-    // 双指针
-    // 时间复杂度O(n平方)
-    // 空间复杂度O(1)
-    // 哈希表
-    // 时间复杂度O(n)
-    // 空间复杂度O(n)
-    public static int[] twoSum(int[] nums, int target) {
-        if (nums.length < 2) return null;
-//        for (int i = 0; i < nums.length; i++) {
-//            for (int j = i + 1; j < nums.length; j++) {
-//                if (nums[i] + nums[j] == target)
-//                    return new int[]{i, j};
-//            }
-//        }
-
-        Map<Integer, Integer> hashMap = new HashMap<>();
-        for (int i = 0; i < nums.length; i++) {
-            if (hashMap.containsKey(target - nums[i]))
-                return new int[]{hashMap.get(target - nums[i]), i};
-            hashMap.put(nums[i], i);
-        }
-        return null;
-    }
-
-    // 有效的数独
-    // 哈希表
-    // 时间复杂度O(1)
-    // 空间复杂度O(1)
-    //        String[][] a = new String[][]{
-    //                {"5", "3", ".", ".", "7", ".", ".", ".", "."},
-    //                {"6", ".", ".", "1", "9", "5", ".", ".", "."},
-    //                {".", "9", "8", ".", ".", ".", ".", "6", "."},
-    //                {"8", ".", ".", ".", "6", ".", ".", ".", "3"},
-    //                {"4", ".", ".", "8", ".", "3", ".", ".", "1"},
-    //                {"7", ".", ".", ".", "2", ".", ".", ".", "6"},
-    //                {".", "6", ".", ".", ".", ".", "2", "8", "."},
-    //                {".", ".", ".", "4", "1", "9", ".", ".", "5"},
-    //                {".", ".", ".", ".", "8", ".", ".", "7", "9"}};
-    public static boolean isValidSudoku(String[][] board) {
-        // key值，value出现次数
-        Map<Integer, Integer>[] rows = new HashMap[9];
-        Map<Integer, Integer>[] columns = new HashMap[9];
-        Map<Integer, Integer>[] boxes = new HashMap[9];
-        for (int i = 0; i < 9; i++) {
-            rows[i] = new HashMap<>();
-            columns[i] = new HashMap<>();
-            boxes[i] = new HashMap<>();
-        }
-//        for (int i = 0; i < board.length; i++) {
-//            for (int j = 0; j < board[i].length; j++) {
-//                if (!TextUtils.equals(board[i][j], ".")) {
-//                    int n = Integer.valueOf(board[i][j]);
-//                    int box_index = i / 3 * 3 + j / 3;
-//                    rows[i].put(n, rows[i].getOrDefault(n, 0) + 1);
-//                    columns[j].put(n, columns[j].getOrDefault(n, 0) + 1);
-//                    boxes[box_index].put(n, boxes[box_index].getOrDefault(n, 0) + 1);
-//                    if (rows[i].get(n) > 1 || columns[j].get(n) > 1 || boxes[box_index].get(n) > 1)
-//                        return false;
-//                }
-//            }
-//        }
-        return true;
-    }
-
-
-    // 旋转图像
-    // 使用辅佐数组
-    // 时间复杂度O(n平方)
-    // 空间复杂度O(n平方)
-    // 原地旋转
-    // 用翻转代替旋转
-    // int[][] matrix = {{1,2,3,4},{4,5,6,5},{7,8,9,1}{4,4,6,5}};
-    //   SolutionArray.rotate(matrix);
-    //        for (int i = 0; i < matrix.length; i++) {
-    //            for (int j = 0; j < matrix.length; j++) {
-    //                ShowLogUtil.info(matrix[i][j]);
-    //            }
-    //        }
-    public static void rotate(int[][] matrix) {
-//        int n = matrix.length;
-//        int[][] new_matrix = new int[n][n];
-//        for (int i = 0; i < n; i++) {
-//            for (int j = 0; j < n; j++) {
-//                new_matrix[j][n - 1 - i] = matrix[i][j];
-//            }
-//        }
-//        for (int i = 0; i < n; i++) {
-//            for (int j = 0; j < n; j++) {
-//                matrix[i][j] = new_matrix[i][j];
-//            }
-//        }
-
-        int length = matrix.length;
-        for (int i = 0; i < length / 2; i++) {
-            for (int j = 0; j < (length + 1) / 2; j++) {
-                int temp = matrix[i][j];
-                matrix[i][j] = matrix[length - j - 1][i];
-                matrix[length - j - 1][i] = matrix[length - i - 1][length - j - 1];
-                matrix[length - i - 1][length - j - 1] = matrix[j][length - i - 1];
-                matrix[j][length - i - 1] = temp;
-            }
-        }
-    }
-}
Index: app/src/main/java/com/future/message/algorithm/SolutionTreeNode.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/SolutionTreeNode.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/SolutionTreeNode.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,182 +0,0 @@
-package com.future.message.algorithm;
-
-import com.future.message.algorithm.bean.TreeNode;
-import com.future.message.util.ShowLogUtil;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.LinkedList;
-import java.util.List;
-import java.util.Queue;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/5 13:01
- * Description:
- */
-public class SolutionTreeNode {
-    // 前序遍历
-    // 递归
-    // 时间复杂度O(n)
-    // 空间复杂度O(n)
-    public static List<Integer> preorderTraversal(TreeNode root) {
-        List<Integer> res = new ArrayList<>();
-        preorder(root, res);
-        return res;
-    }
-
-    public static void preorder(TreeNode root, List<Integer> res) {
-        if (root == null) return;
-        res.add(root.val);
-        preorder(root.left, res);
-        preorder(root.right, res);
-    }
-
-    // 中序遍历
-    // 迭代
-    // 时间复杂度O(n)
-    // 空间复杂度O(n)
-    public static List<Integer> inorderTraversal(TreeNode root) {
-        List<Integer> res = new ArrayList<>();
-        inorder(root, res);
-        return res;
-    }
-
-    public static void inorder(TreeNode root, List<Integer> res) {
-        if (root == null) return;
-        inorder(root.left, res);
-        res.add(root.val);
-        inorder(root.right, res);
-    }
-
-    // 后序遍历
-    // 迭代
-    // 时间复杂度O(n)
-    // 空间复杂度O(n)
-    public static List<Integer> postorderTraversal(TreeNode root) {
-        List<Integer> res = new ArrayList<>();
-        postorder(root, res);
-        return res;
-    }
-
-    public static void postorder(TreeNode root, List<Integer> res) {
-        if (root == null) return;
-        postorder(root.left, res);
-        postorder(root.right, res);
-        res.add(root.val);
-    }
-
-    // 层序遍历
-    // 时间复杂度O()
-    // 空间复杂度O()
-    public static List<List<Integer>> levelOrder(TreeNode root) {
-        List<List<Integer>> res = new ArrayList<List<Integer>>();
-        if (root == null) new ArrayList<List<Integer>>();
-        Queue<TreeNode> queue = new LinkedList<>();
-        queue.offer(root);
-        int level = 0;
-        while (!queue.isEmpty()) {
-            level++;
-            List<Integer> tempList = new ArrayList<>();
-            int size = queue.size();
-            for (int i = 0; i < size; i++) {
-                TreeNode t = queue.poll();
-                tempList.add(t.val);
-                if (t.left != null)
-                    queue.offer(t.left);
-                if (t.right != null)
-                    queue.offer(t.right);
-            }
-            if (level % 2 == 1) {
-                int length = tempList.size();
-                for (int i = 0; i < length / 2; i++) {
-                    int temp = tempList.get(i);
-                    tempList.set(i, tempList.get(length - 1 - i));
-                    tempList.set(length - 1 - i, temp);
-                }
-            }
-            res.add(tempList);
-        }
-        return res;
-
-//        if (root == null) {
-//            return new ArrayList<List<Integer>>();
-//        }
-//        List<List<Integer>> res = new ArrayList<List<Integer>>();
-//        LinkedList<TreeNode> queue = new LinkedList<TreeNode>();
-//        //将根节点放入队列中，然后不断遍历队列
-//        queue.add(root);
-//        while (queue.size() > 0) {
-//            //获取当前队列的长度，这个长度相当于 当前这一层的节点个数
-//            int size = queue.size();
-//            ShowLogUtil.info("size=" + size);
-//            ArrayList<Integer> tmp = new ArrayList<Integer>();
-//            //将队列中的元素都拿出来(也就是获取这一层的节点)，放到临时list中
-//            //如果节点的左/右子树不为空，也放入队列中
-//            for (int i = 0; i < size; ++i) {
-//                TreeNode t = queue.remove();
-//                tmp.add(t.val);
-//                if (t.left != null) {
-//                    queue.add(t.left);
-//                }
-//                if (t.right != null) {
-//                    queue.add(t.right);
-//                }
-//            }
-//            //将临时list加入最终返回结果中
-//            res.add(tmp);
-//        }
-//        return res;
-    }
-
-
-    // 二叉树最大深度
-    public static int maxDepth(TreeNode root) {
-        if (root == null) return 0;
-        return Math.max(maxDepth(root.left) + 1, maxDepth(root.right) + 1);
-    }
-
-
-    // 验证二叉搜索树
-    public static boolean isValidBST(TreeNode root) {
-        if (root == null) return true;
-        // 左树的值小于根节点，右树的值大于根节点
-        if (isValidBST(root.left) && isValidBST(root.right)
-                && (root.left.val < root.val) && (root.right.val > root.val)) return true;
-        return false;
-    }
-
-//    // 二叉树的层序遍历
-//    public static List<List<Integer>> levelOrder(TreeNode root) {
-//        if (root == null) return null;
-//        List<List<Integer>> parent = new ArrayList<>();
-//        List<Integer> child1 = new ArrayList<>();
-//        if (root != null) {
-//            child1.add(root.val);
-//        }
-//        parent.add(child1);
-//
-//        List<Integer> child2 = new ArrayList<>();
-//        if (root.left != null) {
-//            child2.add(root.left.val);
-//        }
-//        if (root.right != null) {
-//            child2.add(root.right.val);
-//        }
-//        parent.add(child2);
-//
-//        List<Integer> child3 = new ArrayList<>();
-//        if (root.right.left != null) {
-//            child3.add(root.right.left.val);
-//        }
-//        if (root.right.right != null) {
-//            child3.add(root.right.right.val);
-//        }
-//        parent.add(child3);
-//        return parent;
-//    }
-
-//    public static boolean ergodic(TreeNode root) {
-//    }
-}
Index: app/src/main/java/com/future/message/java/AbstractAnimal.java
===================================================================
--- app/src/main/java/com/future/message/java/AbstractAnimal.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/AbstractAnimal.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,14 +0,0 @@
-package com.future.message.java;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/19 10:55
- * Description:
- */
-public abstract class AbstractAnimal {
-
-    public static void eat(){
-
-    }
-}
Index: app/src/main/java/com/future/message/algorithm/bean/MyHashMap.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/bean/MyHashMap.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/bean/MyHashMap.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,102 +0,0 @@
-package com.future.message.algorithm.bean;
-
-import com.future.message.util.ShowLogUtil;
-
-import java.util.Iterator;
-import java.util.LinkedList;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/17 10:09
- * Description: 哈希映射
- * 时间复杂度O(n/b):n哈希表的元素数量，b为链表的数量?
- * 空间复杂度O(n+b)
- *         MyHashMap hashMap = new MyHashMap();
- *         hashMap.put(2, 3);
- *         hashMap.put(2, 4);
- *         int param_2 = hashMap.get(2);
- *         hashMap.remove(2);
- */
-public class MyHashMap {
-    private class Pair {
-        int key;
-        int value;
-
-        public Pair(int key, int value) {
-            this.key = key;
-            this.value = value;
-        }
-
-        public int getKey() {
-            return key;
-        }
-
-        public void setKey(int key) {
-            this.key = key;
-        }
-
-        public int getValue() {
-            return value;
-        }
-
-        public void setValue(int value) {
-            this.value = value;
-        }
-    }
-
-    public static final int BASE = 700;
-    LinkedList[] data;
-
-    public MyHashMap() {
-        data = new LinkedList[BASE];
-        for (int i = 0; i < BASE; i++) {
-            data[i] = new LinkedList<Pair>();
-        }
-    }
-
-    public void put(int key, int value) {
-        int hash = hash(key);
-        Iterator it = data[hash].iterator();
-        while (it.hasNext()) {
-            Pair pair = (Pair) it.next();
-            if (pair.getKey() == key) {
-                pair.setValue(value);
-                ShowLogUtil.info("put=" + key + ",value=" + value);
-                return;
-            }
-        }
-        ShowLogUtil.info("put=" + key + ",value=" + value);
-        data[hash].addLast(new Pair(key, value));
-    }
-
-    public int get(int key) {
-        int hash = hash(key);
-        Iterator it = data[hash].iterator();
-        while (it.hasNext()) {
-            Pair pair = (Pair) it.next();
-            if (pair.getKey() == key) {
-                ShowLogUtil.info("get=" + key + ",value=" + pair.getValue());
-                return pair.getValue();
-            }
-        }
-        return 0;
-    }
-
-    public void remove(int key) {
-        int hash = hash(key);
-        Iterator it = data[hash].iterator();
-        while (it.hasNext()) {
-            Pair pair = (Pair) it.next();
-            if (pair.getKey() == key) {
-                data[hash].remove(pair);
-                ShowLogUtil.info("remove=" + key);
-                return;
-            }
-        }
-    }
-
-    public int hash(int key) {
-        return key % BASE;
-    }
-}
Index: app/src/main/java/com/future/message/base/SayHello.java
===================================================================
--- app/src/main/java/com/future/message/base/SayHello.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/base/SayHello.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,21 +0,0 @@
-package com.future.message.base;
-
-import com.future.message.util.ShowLogUtil;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/26 15:29
- * Description:
- */
-public class SayHello {
-    @HelloWorld(name = "Jane")
-    public void sayHello() {
-        ShowLogUtil.info(  " say hello");
-    }
-
-    @HelloWorld(name = "John")
-    public void bye(int age) {
-        ShowLogUtil.info( age+" years old");
-    }
-}
Index: app/src/main/java/com/future/message/view/WaterDropView.java
===================================================================
--- app/src/main/java/com/future/message/view/WaterDropView.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/view/WaterDropView.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,139 +0,0 @@
-package com.future.message.view;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Paint;
-import android.graphics.Path;
-import android.graphics.RectF;
-import android.util.AttributeSet;
-import android.view.View;
-
-import androidx.annotation.Nullable;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/19 16:56
- * Description:
- */
-public class WaterDropView extends View {
-    private Paint mPaint;
-    private int mCenterWidthPoint;
-    private int mCenterHeightPoint;
-
-    private OnClickListener mOnClickListener = new OnClickListener() {
-        @Override
-        public void onClick(View v) {
-            invalidate();
-        }
-    };
-    private int mTimes;
-
-    public WaterDropView(Context context) {
-        super(context);
-        init();
-    }
-
-    public WaterDropView(Context context, @Nullable AttributeSet attrs) {
-        super(context, attrs);
-        init();
-    }
-
-    private void init() {
-        mPaint = new Paint();
-        mPaint.setColor(Color.parseColor("#cccccc"));
-        mPaint.setStrokeWidth(2);
-        mPaint.setStyle(Paint.Style.STROKE);
-    }
-
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-        int width = 0;
-        int widthSize = MeasureSpec.getSize(widthMeasureSpec);
-        int widthMode = MeasureSpec.getMode(widthMeasureSpec);
-        switch (widthMode) {
-            case MeasureSpec.AT_MOST:
-                width = widthSize / 2;
-                break;
-            case MeasureSpec.EXACTLY:
-                width = widthSize;
-                break;
-            default:
-                break;
-        }
-
-        int height = 0;
-        int heightSize = MeasureSpec.getSize(heightMeasureSpec);
-        int heightMode = MeasureSpec.getMode(heightMeasureSpec);
-        switch (heightMode) {
-            case MeasureSpec.AT_MOST:
-                height = heightSize / 2;
-                break;
-            case MeasureSpec.EXACTLY:
-                height = heightSize;
-                break;
-            default:
-                break;
-        }
-        mCenterWidthPoint = width / 2;
-        mCenterHeightPoint = height / 2;
-        mTimes = Math.min(widthSize, heightSize) / 4;
-        setMeasuredDimension(width, height);
-    }
-
-    @Override
-    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
-        super.onLayout(changed, left, top, right, bottom);
-    }
-
-    int n = 0;
-
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-
-        mPaint.setStyle(Paint.Style.STROKE);
-        mPaint.setColor(Color.parseColor("#cccccc"));
-
-        canvas.drawColor(Color.WHITE);
-        canvas.translate(mCenterWidthPoint, mCenterHeightPoint);
-
-        // 水滴瓶框架
-        canvas.drawLine(0, -2 * mTimes, -1 * mTimes, -1 * mTimes, mPaint);
-        canvas.drawLine(0, -2 * mTimes, 1 * mTimes, -1 * mTimes, mPaint);
-        RectF mRectFCircle = new RectF(-1.41f * mTimes, -1.41f * mTimes, 1.41f * mTimes, 1.41f * mTimes);
-        canvas.drawArc(mRectFCircle, 315, 270, false, mPaint);
-
-        // 瓶子中的水
-        mPaint.setStyle(Paint.Style.FILL);
-        mPaint.setColor(Color.parseColor("#FF4C7EFF"));
-
-        n += 50;
-        if (n == (((int) (2 * 1.41f * mTimes)) + 2 * 50)) {
-            n = 0;
-        } else if (n == (((int) (2 * 1.41f * mTimes)) + 50)) {
-            Path path = new Path();
-            path.moveTo(0, -2 * mTimes + 50);
-            path.lineTo(-1 * mTimes, -1 * mTimes);
-            path.lineTo(1 * mTimes, -1 * mTimes);
-            path.close();
-            canvas.drawPath(path, mPaint);
-        } else if (n >= 2 * 1.41f * mTimes) {
-            n = (int) (2 * 1.41f * mTimes);
-        }
-        Path path1 = new Path();
-        path1.addCircle(0, 0, 1.414f * mTimes, Path.Direction.CCW);
-        Path path2 = new Path();
-        path2.addRect(-1.41f * mTimes, 1.41f * mTimes - n, 1.41f * mTimes, 1.41f * mTimes, Path.Direction.CCW);
-        path1.op(path2, Path.Op.INTERSECT);
-
-        canvas.drawPath(path1, mPaint);
-
-        postInvalidateDelayed(500);
-
-        setOnClickListener(mOnClickListener);
-    }
-}
Index: app/src/main/java/com/future/message/java/Animal.java
===================================================================
--- app/src/main/java/com/future/message/java/Animal.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/Animal.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,22 +0,0 @@
-package com.future.message.java;
-
-import com.future.message.util.ShowLogUtil;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/19 10:11
- * Description:
- */
-public class Animal {
-    private String color;
-    public  void eat(){
-        ShowLogUtil.info("动物吃饭");
-    }
-
-    public class Panda {
-        public void eat() {
-            ShowLogUtil.info("熊猫吃竹子");
-        }
-    }
-}
Index: app/src/main/java/com/future/message/receiver/ScanBlueReceiver.java
===================================================================
--- app/src/main/java/com/future/message/receiver/ScanBlueReceiver.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/receiver/ScanBlueReceiver.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,86 +0,0 @@
-package com.future.message.receiver;
-
-import android.bluetooth.BluetoothAdapter;
-import android.bluetooth.BluetoothDevice;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-
-import com.future.message.receiver.callback.ConnectBtCallBack;
-import com.future.message.receiver.callback.ScanBtCallBack;
-import com.future.message.util.BluetoothManager;
-import com.future.message.util.ShowLogUtil;
-
-import java.lang.reflect.Method;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/23 15:16
- * Description: 蓝牙扫描广播监听器
- */
-public class ScanBlueReceiver extends BroadcastReceiver {
-    private String pin = "0000";  //此处为你要连接的蓝牙设备的初始密钥，一般为1234或0000
-    private ScanBtCallBack mCallBack;
-
-    public ScanBlueReceiver(ScanBtCallBack callBack) {
-        mCallBack = callBack;
-    }
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        String action = intent.getAction();
-        BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
-        switch (action) {
-            case BluetoothAdapter.ACTION_DISCOVERY_STARTED:
-                mCallBack.onScanStarted();
-                break;
-            case BluetoothAdapter.ACTION_DISCOVERY_FINISHED:
-                mCallBack.onScanFinished();
-                break;
-            case BluetoothDevice.ACTION_FOUND:
-                mCallBack.onScanning(device);
-                break;
-            case BluetoothDevice.ACTION_PAIRING_REQUEST:
-                mCallBack.onBondRequest(device);
-                try {
-                    // 1.确认配对
-                    Method setPairingConfirmation = device.getClass().getDeclaredMethod("setPairingConfirmation", boolean.class);
-                    setPairingConfirmation.invoke(device, true);
-                    // 2.终止有序广播
-                    abortBroadcast();
-                    // 3.调用setPin方法进行配对
-                    Method removeBondMethod = device.getClass().getDeclaredMethod("setPin", new Class[]{byte[].class});
-                    Boolean returnValue = (Boolean) removeBondMethod.invoke(device, new Object[]{pin.getBytes()});
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-                break;
-            case BluetoothDevice.ACTION_BOND_STATE_CHANGED:
-                switch (device.getBondState()) {
-                    case BluetoothDevice.BOND_NONE:
-                        mCallBack.onBondFail();
-                        break;
-                    case BluetoothDevice.BOND_BONDING:
-                        mCallBack.onBondBonding();
-                        break;
-                    case BluetoothDevice.BOND_BONDED:
-                        mCallBack.onBondSuccess();
-                        BluetoothManager.SINGLETON.connect(device, new ConnectBtCallBack() {
-                            @Override
-                            public void onConnectSuccess() {
-                                ShowLogUtil.info("连接成功");
-                            }
-
-                            @Override
-                            public void onConnectFail() {
-                                ShowLogUtil.info("连接失败");
-                            }
-                        });
-                        break;
-                }
-                break;
-        }
-    }
-
-}
Index: app/src/main/java/com/future/message/algorithm/SolutionLinkedList.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/SolutionLinkedList.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/SolutionLinkedList.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,120 +0,0 @@
-package com.future.message.algorithm;
-
-import com.future.message.algorithm.bean.ListNode;
-import com.future.message.util.ShowLogUtil;
-
-import java.util.Deque;
-import java.util.LinkedList;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/16 15:31
- * Description:
- */
-public class SolutionLinkedList {
-    // 删除链表中的节点
-    public static void deleteNode(ListNode node) {
-        node.val = node.next.val;
-        node.next = node.next.next;
-    }
-
-    // 删除链表的倒数第N个节点
-    // 计算链表长度
-    // 时间复杂的O(n)
-    // 空间复杂的O(1)
-    public static ListNode removeNthFromEnd(ListNode head, int n) {
-        // 增加伪头
-        ListNode newHead = new ListNode(0, head);
-        // 计算链表长度
-        int size = getLength(head);
-        // 前驱节点
-        ListNode pred = newHead;
-        // 前驱节点
-        for (int i = 0; i < size - n; i++) {
-            pred = pred.next;
-        }
-        pred.next = pred.next.next;
-        // 去掉伪头
-        return newHead.next;
-
-//        ListNode dummy = new ListNode(0, head);
-//        Deque<ListNode> stack = new LinkedList<>();
-//        ListNode cur = dummy;
-//        while (cur != null) {
-//            stack.push(cur);
-//            cur = cur.next;
-//        }
-//        for (int i = 0; i < n; i++) {
-//            stack.pop();
-//        }
-//        ListNode prev = stack.peek();
-//        prev.next = prev.next.next;
-//        ListNode ans = dummy.next;
-//        ergodic(ans);
-    }
-
-    public static int getLength(ListNode node) {
-        int size = 0;
-        while (node != null) {
-            size++;
-            node = node.next;
-        }
-        return size;
-    }
-
-    public static int ergodic(ListNode node) {
-        int length = 0;
-        while (node != null) {
-            length++;
-            ShowLogUtil.info("node.val=" + node.val);
-            node = node.next;
-        }
-        return length;
-    }
-
-    // 快慢指针
-    // 时间复杂的O(n)
-    // 空间复杂的O(1)
-    //        ListNode l1 = new ListNode(1);
-    //        ListNode l2 = new ListNode(1);
-    //        ListNode l3 = new ListNode(1);
-    //        ListNode l4 = new ListNode(1);
-    //        ListNode l5 = new ListNode(1);
-    //        ListNode l6 = new ListNode(1);
-    //        l1.next = l2;
-    //        l2.next = l3;
-    //        l3.next = l4;
-    //        l4.next = l5;
-    //        l5.next = l6;
-    //        l6.next = null;
-    //        boolean hasCycle = SolutionLinkedList.hasCycle(l1);
-    //        ShowLogUtil.info("hasCycle=" + hasCycle);
-    public static boolean hasCycle(ListNode head) {
-        if (head == null || head.next == null) return false;
-        ListNode slow = head;
-        ListNode fast = head.next;
-        while (slow != fast) {
-            if (fast == null || fast.next == null) return false;
-            slow = slow.next;
-            fast = fast.next.next;
-        }
-        return true;
-    }
-
-    // 翻转链表
-    // 双指针迭代
-    // 时间复杂的O(n)
-    // 空间复杂的O(1)
-    public static ListNode reverseList(ListNode head) {
-        ListNode cur = head;
-        ListNode prev = null;
-        while (cur != null) {
-            ListNode temp = cur.next;
-            cur.next = prev;
-            prev = cur;
-            cur = temp;
-        }
-        return prev;
-    }
-}
Index: app/src/main/java/com/future/message/algorithm/bean/MyCircularQueue.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/bean/MyCircularQueue.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/bean/MyCircularQueue.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,73 +0,0 @@
-package com.future.message.algorithm.bean;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/16 17:17
- * Description:
- */
-public class MyCircularQueue {
-    // store elements
-    private int[] data;
-    // a pointer to indicate the start position
-    private int head;
-    private int tail;
-    private int size;
-    private int index;
-
-    public MyCircularQueue(int length) {
-        data = new int[length];
-        head = -1;
-        tail = -1;
-        size = length;
-    }
-
-    public boolean enQueue(int x) {
-        if (isFull() == true) {
-            return false;
-        }
-        if (isEmpty() == true) {
-            head = 0;
-        }
-        tail = (tail + 1) % size;
-        data[tail] = x;
-        return true;
-    }
-
-
-    public boolean deQueue() {
-        if (isEmpty() == true) {
-            return false;
-        }
-        if (head == tail) {
-            head = -1;
-            tail = -1;
-            return true;
-        }
-        head = (head + 1) % size;
-        return true;
-    }
-
-    public int Front() {
-        if (isEmpty() == true) {
-            return -1;
-        }
-        return data[head];
-    }
-    public int Rear() {
-        if (isEmpty() == true) {
-            return -1;
-        }
-        return data[tail];
-    }
-    public boolean isEmpty() {
-        return head == -1;
-    }
-
-    public boolean isFull() {
-        return ((tail + 1) % size) == head;
-    }
-}
Index: app/src/main/java/com/future/message/util/FileUtil.java
===================================================================
--- app/src/main/java/com/future/message/util/FileUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/FileUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,167 +0,0 @@
-package com.future.message.util;
-
-import java.io.BufferedReader;
-import java.io.BufferedWriter;
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.FileReader;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.OutputStream;
-import java.io.OutputStreamWriter;
-import java.io.Reader;
-import java.io.Writer;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.Locale;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/23 09:09
- * Description: File工具类
- */
-public class FileUtil {
-    /**
-     * Author: JfangZ
-     * Email:zhangjingfang@jeejio.com
-     * Date: 2021/2/23 09:11
-     * Description: 创建文件
-     */
-    public static File createFile() {
-        // /data/user/0/com.future.message/cache/zjf5586373986259348895.txt
-        File tempFile = null;
-        try {
-            tempFile = File.createTempFile("temp", ".txt");
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-        return tempFile;
-        // /data/user/0/com.future.message/cache/zjf/20210302/1614669744032.txt
-//        File file = new File(App.getInstance().getApplicationContext().getCacheDir()
-//                + File.separator + "zjf"
-//                + File.separator + new SimpleDateFormat("yyyyMMdd", Locale.CHINA).format(new Date(System.currentTimeMillis()))
-//                + File.separator + System.currentTimeMillis() + ".txt");
-//        if (!file.exists()) {
-//            try {
-//                file.getParentFile().mkdirs();
-//                file.createNewFile();
-//                return file;
-//            } catch (IOException e) {
-//                e.printStackTrace();
-//            }
-//        }
-//        return null;
-    }
-
-    public static void delete(File deleteFile) {
-        if (deleteFile != null)
-            deleteFile.delete();
-    }
-
-    /**
-     * 字节流的读
-     *
-     * @param file
-     */
-    public static void byteRead(File file) {
-        try {
-            InputStream inputStream = new FileInputStream(file);
-            byte[] bytes = new byte[inputStream.available()];
-            int n = inputStream.read(bytes);
-            ShowLogUtil.info(new String(bytes, 0, n));
-            inputStream.close();
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
-    /**
-     * 字节流的写入
-     */
-    public static void byteWrite(File file) {
-        try {
-            OutputStream outputStream = new FileOutputStream(file);
-            String text = "Hello World";
-            byte[] data = text.getBytes();
-            outputStream.write(data);
-            outputStream.close();
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
-    /**
-     * 字节流的读
-     *
-     * @param file
-     */
-    public static void byteReadToWrite(File file,File newFile) {
-        try {
-            InputStream inputStream = new FileInputStream(file);
-            byte[] bytes = new byte[inputStream.available()];
-            OutputStream outputStream = new FileOutputStream(newFile);
-            inputStream.read(bytes);
-            outputStream.write(bytes);
-            inputStream.close();
-            outputStream.close();
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
-    public static void stringRead(File file) {
-        try {
-            BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file),"UTF-8"));
-            String str = reader.readLine();
-            ShowLogUtil.info(str);
-            reader.close();
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-
-    }
-
-
-    public static void stringWrite(File file) {
-        try {
-            Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file),"GB2312"));
-            String text = "Hello World 你好世界";
-            writer.write(text);
-            writer.flush();
-            writer.close();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
-    public static void stringReadToWrite(File file, File newFile) {
-        try {
-            BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file),"GB2312"));
-            String str = reader.readLine();
-            ShowLogUtil.info(str);
-            Writer writer = new FileWriter(newFile);
-            writer.write(str);
-            writer.write("stringReadToWrite");
-            writer.flush();
-            reader.close();
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
-}
Index: app/src/main/java/com/future/message/base/HelloWorld.java
===================================================================
--- app/src/main/java/com/future/message/base/HelloWorld.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/base/HelloWorld.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,19 +0,0 @@
-package com.future.message.base;
-
-import java.lang.annotation.ElementType;
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
-import java.lang.annotation.Target;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/26 15:27
- * Description:
- */
-@Retention(RetentionPolicy.RUNTIME)
-@Target(ElementType.METHOD)
-public @interface HelloWorld {
-    String name() default "";
-//    int age() default 0;
-}
Index: app/src/main/java/com/future/message/base/service/MyService.java
===================================================================
--- app/src/main/java/com/future/message/base/service/MyService.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/base/service/MyService.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,79 +0,0 @@
-package com.future.message.base.service;
-
-import android.app.Service;
-import android.content.Intent;
-import android.os.Binder;
-import android.os.IBinder;
-import android.util.Log;
-import android.widget.Toast;
-
-import androidx.annotation.Nullable;
-
-import com.future.message.util.ShowLogUtil;
-import com.zjingf.awesomesdk.util.ToastUtils;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/25 09:51
- * Description:
- */
-public class MyService extends Service {
-    private boolean flag;
-    private int mProgress;
-
-    public class MyBinder extends Binder {
-        public int getProgress() {
-            return mProgress;
-        }
-    }
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        flag = true;
-        ShowLogUtil.info("onCreate");
-    }
-
-    @Override
-    public int onStartCommand(Intent intent, int flags, int startId) {
-        ShowLogUtil.info("onStartCommand");
-        ToastUtils.showToast(this, "2342134");
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                for (int i = 0; i < 100; i++) {
-                    try {
-                        Thread.sleep(1000);
-                    } catch (InterruptedException e) {
-                        e.printStackTrace();
-                    }
-                    ShowLogUtil.info("i=" + i);
-                    if (!flag) break;
-                }
-
-            }
-        }).start();
-        return super.onStartCommand(intent, flags, startId);
-    }
-
-    @Nullable
-    @Override
-    public IBinder onBind(Intent intent) {
-        ShowLogUtil.info("onBind");
-        return new MyBinder();
-    }
-
-    @Override
-    public boolean onUnbind(Intent intent) {
-        ShowLogUtil.info("onUnbind");
-        return super.onUnbind(intent);
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-        flag = false;
-        ShowLogUtil.info("onDestroy");
-    }
-}
Index: app/src/main/java/com/future/message/bean/FruitBean.java
===================================================================
--- app/src/main/java/com/future/message/bean/FruitBean.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/bean/FruitBean.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,58 +0,0 @@
-package com.future.message.bean;
-
-import java.util.Objects;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/2/25 11:42
- * Description: 水果
- */
-public class FruitBean implements Comparable{
-    private String color = "RED";
-    private int num = 2;
-
-    public FruitBean(String color, int num) {
-        this.color = color;
-        this.num = num;
-    }
-
-    public void setColor(String color) {
-        this.color = color;
-    }
-
-    public String getColor() {
-        return color;
-    }
-
-    public int getNum() {
-        return num;
-    }
-
-    @Override
-    public int compareTo(Object o) {
-        return 0;
-    }
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
-        FruitBean fruitBean = (FruitBean) o;
-        return num == fruitBean.num &&
-                Objects.equals(color, fruitBean.color);
-    }
-
-    @Override
-    public int hashCode() {
-        return Objects.hash(color, num);
-    }
-
-    @Override
-    public String toString() {
-        return "FruitBean{" +
-                "color='" + color + '\'' +
-                ", num=" + num +
-                '}';
-    }
-}
Index: app/src/main/java/com/future/message/receiver/WriteTask.java
===================================================================
--- app/src/main/java/com/future/message/receiver/WriteTask.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/receiver/WriteTask.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,64 +0,0 @@
-package com.future.message.receiver;
-
-import android.bluetooth.BluetoothSocket;
-import android.os.AsyncTask;
-import android.text.TextUtils;
-
-import com.future.message.receiver.callback.WriteCallBack;
-
-import java.io.IOException;
-import java.io.OutputStream;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/2/26 17:56
- * Description:
- */
-public class WriteTask extends AsyncTask<String, Integer, String> {
-    private WriteCallBack mCallBack;
-    private BluetoothSocket mBluetoothSocket;
-
-    public WriteTask(WriteCallBack callBack, BluetoothSocket bluetoothSocket) {
-        mCallBack = callBack;
-        mBluetoothSocket = bluetoothSocket;
-    }
-
-    @Override
-    protected String doInBackground(String... strings) {
-        String string = strings[0];
-        OutputStream out = null;
-        try {
-            mBluetoothSocket.getOutputStream();
-            out.write(string.getBytes());
-        } catch (IOException e) {
-            e.printStackTrace();
-        } finally {
-            if (out != null) {
-                try {
-                    out.close();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-        }
-        return "发送成功";
-    }
-
-    @Override
-    protected void onPreExecute() {
-        if (mCallBack != null) mCallBack.onStart();
-    }
-
-    @Override
-    protected void onPostExecute(String s) {
-        if (mCallBack != null) {
-            if (TextUtils.equals("发送成功",s)){
-                mCallBack.onFinished(false,s);
-            }else {
-                mCallBack.onFinished(true,s);
-            }
-        }
-
-    }
-}
Index: app/src/main/java/com/future/message/algorithm/bean/MyLinkedList.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/bean/MyLinkedList.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/bean/MyLinkedList.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,77 +0,0 @@
-package com.future.message.algorithm.bean;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/17 13:34
- * Description:
- * 时间复杂度:addAtHead：O(1)、get、addAtIndex、deleteAtIndex：O(S)、addAtTail：O(n)
- * 空间复杂度O(1)
- *       MyLinkedList linkedList = new MyLinkedList();
- *         linkedList.addAtHead(1);
- *         linkedList.addAtTail(3);
- *         linkedList.addAtIndex(1,2);   //链表变为1-> 2-> 3
- *         int val1 = linkedList.get(1);//返回2
- *         ShowLogUtil.info("val1="+val1);
- *         linkedList.deleteAtIndex(1);  //现在链表是1-> 3
- *         int val2 = linkedList.get(1);//返回3
- *         ShowLogUtil.info("val2="+val2);
- */
-public class MyLinkedList {
-    int size;
-    ListNode head;
-
-    public MyLinkedList() {
-        size = 0;
-        head = new ListNode(0);
-    }
-
-    public int get(int index) {
-        if (index < 0 || index >= size) return -1;
-        // 当前节点
-        ListNode curr = head;
-        for (int i = 0; i < index + 1; i++) {
-            curr = curr.next;
-        }
-        return curr.val;
-    }
-
-    public void addAtHead(int val) {
-        addAtIndex(0, val);
-
-    }
-
-    public void addAtTail(int val) {
-        addAtIndex(size, val);
-    }
-
-    public void addAtIndex(int index, int val) {
-        if (index > val) return;
-        if (index < 0) index = 0;
-        size++;
-        // 先驱节点
-        ListNode pred = head;
-        // 找到先驱节点
-        for (int i = 0; i < index; i++) {
-            pred = pred.next;
-        }
-        // 插入的节点
-        ListNode toAdd = new ListNode(val);
-        // 插入节点下一个节点是前驱节点后一个节点
-        toAdd.next = pred.next;
-        // 前驱节点下一个节点是插入节点
-        pred.next = toAdd;
-    }
-
-    public void deleteAtIndex(int index) {
-        if (index < 0 || index >= size) return;
-        size--;
-        // 先驱节点
-        ListNode pred = head;
-        for (int i = 0; i < index; i++) {
-            pred = pred.next;
-        }
-        pred.next = pred.next.next;
-
-    }
-}
Index: app/src/main/java/com/future/message/util/EncryptUtil.java
===================================================================
--- app/src/main/java/com/future/message/util/EncryptUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/EncryptUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,532 +0,0 @@
-package com.future.message.util;
-
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.security.GeneralSecurityException;
-import java.security.Key;
-import java.security.KeyFactory;
-import java.security.MessageDigest;
-import java.security.NoSuchAlgorithmException;
-import java.security.SecureRandom;
-import java.security.spec.PKCS8EncodedKeySpec;
-import java.security.spec.X509EncodedKeySpec;
-
-import javax.crypto.Cipher;
-import javax.crypto.KeyGenerator;
-import javax.crypto.SecretKeyFactory;
-import javax.crypto.spec.DESKeySpec;
-import javax.crypto.spec.IvParameterSpec;
-import javax.crypto.spec.SecretKeySpec;
-
-/**
- * Author: MrQinshou
- * Email:cqflqinhao@126.com
- * Date: 2020/11/17 9:22
- * Description:加解密工具类
- */
-public class EncryptUtil {
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 9:33
-     * Description:加密计算
-     *
-     * @param bytes     待计算的数据
-     * @param algorithm 加密算法
-     * @return 计算后的值
-     * @throws NoSuchAlgorithmException
-     */
-    private static String encrypt(byte[] bytes, String algorithm) throws NoSuchAlgorithmException {
-        MessageDigest messageDigest = MessageDigest.getInstance(algorithm);
-        messageDigest.update(bytes);
-        byte[] digest = messageDigest.digest();
-        StringBuilder stringBuilder = new StringBuilder();
-        for (byte b : digest) {
-            int i = b;
-            if (i < 0) {
-                // 负数转换成正数,等价于 i += 256;
-                i = i & 0xFF;
-            }
-            if (i < 16) {
-                // 让十六进制全部都是两位数
-                stringBuilder.append("0");
-            }
-            // 把十进制的数转换成十六进制的数
-            stringBuilder.append(Integer.toHexString(i));
-        }
-        // 32 位加密
-        return stringBuilder.toString();
-        // 16 位加密
-//            return stringBuffer.substring(8, 24);
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 14:50
-     * Description:生成加密算法的密钥
-     *
-     * @param algorithm 加密算法,DES/AES 等
-     * @param keySize   密钥长度,DES 必须为 64 bits
-     * @return 随机生成的密钥
-     * @throws NoSuchAlgorithmException
-     */
-    private static String generateSecret(String algorithm, int keySize) throws NoSuchAlgorithmException {
-        // SHA1PRNG 强随机种子算法
-        SecureRandom secureRandom = SecureRandom.getInstance("SHA1PRNG");
-        KeyGenerator keyGenerator = KeyGenerator.getInstance(algorithm);
-        keyGenerator.init(keySize, secureRandom);
-        // 生成密钥
-        Key key = keyGenerator.generateKey();
-        byte[] bytes = key.getEncoded();
-        StringBuilder stringBuilder = new StringBuilder();
-        for (byte b : bytes) {
-            int i = b;
-            if (i < 0) {
-                // 负数转换成正数,等价于 i += 256;
-                i = i & 0xFF;
-            }
-            if (i < 16) {
-                // 让十六进制全部都是两位数
-                stringBuilder.append("0");
-            }
-            // 把十进制的数转换成十六进制的数
-            stringBuilder.append(Integer.toHexString(i));
-        }
-        return stringBuilder.toString();
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 13:45
-     * Description:处理 DES 密钥
-     *
-     * @param secret 密钥
-     * @return 密钥处理后返回的 key 对象
-     * @throws GeneralSecurityException
-     */
-    private static Key getDesKey(String secret) throws GeneralSecurityException {
-        DESKeySpec desKeySpec = new DESKeySpec(secret.getBytes());
-        SecretKeyFactory secretKeyFactory = SecretKeyFactory.getInstance("DES");
-        return secretKeyFactory.generateSecret(desKeySpec);
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 14:08
-     * Description:处理 AES 密钥
-     */
-    private static Key getAesKey(String key) {
-        return new SecretKeySpec(key.getBytes(), "AES");
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 9:33
-     * Description:字符串 MD5 计算
-     *
-     * @param bytes 待计算的数据
-     * @return 计算后的值
-     */
-    public static String md5Encrypt(byte[] bytes) {
-        try {
-            return encrypt(bytes, "MD5");
-        } catch (NoSuchAlgorithmException e) {
-            e.printStackTrace();
-        }
-        return new String(bytes);
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 12:51
-     * Description:字符串 SHA-1 计算
-     *
-     * @param bytes 待计算的数据
-     * @return 计算后的值
-     */
-    public static String sha1Encrypt(byte[] bytes) {
-        try {
-            return encrypt(bytes, "SHA-1");
-        } catch (NoSuchAlgorithmException e) {
-            e.printStackTrace();
-        }
-        return new String(bytes);
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 12:51
-     * Description:字符串 SHA-224 计算
-     *
-     * @param bytes 待计算的数据
-     * @return 计算后的值
-     */
-    public static String sha224Encrypt(byte[] bytes) {
-        try {
-            return encrypt(bytes, "SHA-224");
-        } catch (NoSuchAlgorithmException e) {
-            e.printStackTrace();
-        }
-        return new String(bytes);
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 12:51
-     * Description:字符串 SHA-256 计算
-     *
-     * @param bytes 待计算的数据
-     * @return 计算后的值
-     */
-    public static String sha256Encrypt(byte[] bytes) {
-        try {
-            return encrypt(bytes, "SHA-256");
-        } catch (NoSuchAlgorithmException e) {
-            e.printStackTrace();
-        }
-        return new String(bytes);
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 12:51
-     * Description:字符串 SHA-384 计算
-     *
-     * @param bytes 待计算的数据
-     * @return 计算后的值
-     */
-    public static String sha384Encrypt(byte[] bytes) {
-        try {
-            return encrypt(bytes, "SHA-384");
-        } catch (NoSuchAlgorithmException e) {
-            e.printStackTrace();
-        }
-        return new String(bytes);
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 12:51
-     * Description:字符串 SHA-512 计算
-     *
-     * @param bytes 待计算的数据
-     * @return 计算后的值
-     */
-    public static String sha512Encrypt(byte[] bytes) {
-        try {
-            return encrypt(bytes, "SHA-512");
-        } catch (NoSuchAlgorithmException e) {
-            e.printStackTrace();
-        }
-        return new String(bytes);
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 14:50
-     * Description:生成 DES 加密算法的密钥
-     *
-     * @return 随机生成的密钥
-     */
-    public static String generateDesSecret() {
-        try {
-            return generateSecret("DES", 64);
-        } catch (NoSuchAlgorithmException e) {
-            e.printStackTrace();
-        }
-        return null;
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 14:50
-     * Description:生成 AES 加密算法的密钥
-     *
-     * @return 随机生成的密钥
-     */
-    public static String generateAesSecret() {
-        try {
-            return generateSecret("AES", 128);
-        } catch (NoSuchAlgorithmException e) {
-            e.printStackTrace();
-        }
-        return null;
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 13:28
-     * Description:DES 对称加密
-     *
-     * @param secret  密钥
-     * @param encrypt 待加密的数据
-     * @return 加密后的 byte 数组,方便查看的话可自行进行 base64 转换
-     */
-    public static byte[] desEncrypt(String secret, byte[] encrypt) {
-        // DES 是加密方式 CBC 是工作模式 PKCS5Padding 是填充模式
-        try {
-            Cipher cipher = Cipher.getInstance("DES/CBC/PKCS5PADDING");
-            // 初始化向量参数,AES 为 16 位,DES 为 8 位
-            cipher.init(Cipher.ENCRYPT_MODE, getDesKey(secret), new IvParameterSpec(new byte[cipher.getBlockSize()]));
-            return cipher.doFinal(encrypt);
-        } catch (GeneralSecurityException e) {
-            e.printStackTrace();
-        }
-        return null;
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 13:28
-     * Description:DES 对称解密
-     *
-     * @param secret  密钥
-     * @param decrypt 待解密的数据
-     * @return 解密后的 byte 数组,可通过 new String() 转换后方便查看
-     */
-    public static byte[] desDecrypt(String secret, byte[] decrypt) {
-        try {
-            // DES 是加密方式 CBC 是工作模式 PKCS5Padding 是填充模式
-            Cipher cipher = Cipher.getInstance("DES/CBC/PKCS5PADDING");
-            // 初始化向量参数,AES 为 16 位,DES 为 8 位
-            cipher.init(Cipher.DECRYPT_MODE, getDesKey(secret), new IvParameterSpec(new byte[cipher.getBlockSize()]));
-            return cipher.doFinal(decrypt);
-        } catch (GeneralSecurityException e) {
-            e.printStackTrace();
-        }
-        return null;
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 14:06
-     * Description:AES 对称加密
-     *
-     * @param secret  密钥
-     * @param encrypt 待加密的数据
-     * @return 加密后的 byte 数组,方便查看的话可自行进行 base64 转换
-     */
-    public static byte[] aesEncrypt(String secret, byte[] encrypt) {
-        // AES 是加密方式 CBC 是工作模式 PKCS5Padding 是填充模式
-        try {
-            // 创建密码器
-            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
-            // 初始化加密器
-            cipher.init(Cipher.ENCRYPT_MODE, getAesKey(secret), new IvParameterSpec(new byte[cipher.getBlockSize()]));
-            return cipher.doFinal(encrypt);
-        } catch (GeneralSecurityException e) {
-            e.printStackTrace();
-        }
-        return null;
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/17 14:06
-     * Description:AES 对称解密
-     *
-     * @param secret  密钥
-     * @param decrypt 待解密的数据
-     * @return 解密后的 byte 数组,可通过 new String() 转换后方便查看
-     */
-    public static byte[] aesDecrypt(String secret, byte[] decrypt) {
-        try {
-            // 创建密码器
-            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
-            // 初始化解密器
-            cipher.init(Cipher.DECRYPT_MODE, getAesKey(secret), new IvParameterSpec(new byte[cipher.getBlockSize()]));
-            return cipher.doFinal(decrypt);
-        } catch (GeneralSecurityException e) {
-            e.printStackTrace();
-        }
-        return null;
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/18 9:17
-     * Description:RSA 加密
-     *
-     * @param isPublicKey true 为公钥,false 为私钥
-     * @param secret      密钥,通常传递的密钥为方便查看,通常为 base64 转码后的字符串,所以通常需要进行 base64 解码,
-     *                    -----BEGIN PUBLIC KEY----- 与 -----END PUBLIC KEY----- 或
-     *                    -----BEGIN PRIVATE KEY----- 与 -----END PRIVATE KEY----- 之间的字符串为 base64 编码后的密钥,
-     *                    注意 base64 不能带有换行符和空格
-     *                    eg:
-     *                    公钥:
-     *                    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCrsFwBUPGFEp/dVLlAEbvmJXoM5bP3foggPMXj1N4mXBaVUfsrf0vI0VNGNW6P+cPm+t5VDlr7hazZknxR26dBvxzR+Qt31NMKuCpe13HTl+ee+3wPeIOgobQC2v9AI7Y9JrOz/2qnhwnNJIHcDi9tQmV9uZL0JcGlt6GR9BIOsQIDAQAB
-     *                    私钥:
-     *                    MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAKuwXAFQ8YUSn91UuUARu+Ylegzls/d+iCA8xePU3iZcFpVR+yt/S8jRU0Y1bo/5w+b63lUOWvuFrNmSfFHbp0G/HNH5C3fU0wq4Kl7XcdOX5577fA94g6ChtALa/0Ajtj0ms7P/aqeHCc0kgdwOL21CZX25kvQlwaW3oZH0Eg6xAgMBAAECgYEAlkckATLsdGI88+p4zA+5vFUJY8ibogJq/Gy1ehqU6FaqncDIbOZbW0d98HJMeFFSnBbyDNkn4gi7pyWFE9GDr6RLwrAinn/IBVXF/Hsz/TvxAHAG8XJdKvSFu6H9RCqryLPKMuNT7rXVc4WAI72qDnGA+sxcEc00CKDylkRVTRECQQDkh94UtgM4yAAw/u0thNHBLJas/EYh4C0xJL2gkaRN+3WDuaZhyoLhlgxHqg/w4QI/k+mtlEBapd+sTgoIaZEjAkEAwFNonpowCJDB4nZarzCSKex6UNu2TbOL7HEjK4AzI7hxtEd6f9+Tgq2H3o7jfbqcqAgO1lukdCqU6gUdiK1AGwJAcjKGwli1wXEHz3QENyPQ4TQT0zt5HEJ2ssEGVS+SKDnI3lsuDl3xCyM83a7Yqmj2A6k5MzkK84FCBUs17kA6ewJBALU7pCGY0Fyx9FJwDyJ5VbL16YlakZ8E630CXA74/rfRbixhEvl++KUy2w8JfSwUdt0MwtaSgxUIr00bRuptwDMCQHXpZEhYAzIFlzHm7q2ZA1SG0UVA5WE+TEp7UY8BEEVkiMw8sf8eTNgK3UPdBPcyRIs7esEvf8EnOonrpcxYZAc=
-     * @param encrypt     待加密的数据
-     * @return 加密后的 byte 数组,方便查看的话可自行进行 base64 转换
-     */
-    public static byte[] rsaEncrypt(boolean isPublicKey, byte[] secret, byte[] encrypt) {
-        try {
-            KeyFactory keyFactory = KeyFactory.getInstance("RSA");
-            Key key;
-            if (isPublicKey) {
-                key = keyFactory.generatePublic(new X509EncodedKeySpec(secret));
-            } else {
-                key = keyFactory.generatePrivate(new PKCS8EncodedKeySpec(secret));
-            }
-            Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1PADDING");
-            cipher.init(Cipher.ENCRYPT_MODE, key);
-            return cipher.doFinal(encrypt);
-        } catch (GeneralSecurityException e) {
-            e.printStackTrace();
-        }
-        return null;
-    }
-
-    /**
-     * Author: MrQinshou
-     * Email:cqflqinhao@126.com
-     * Date:2020/11/18 9:17
-     * Description:RSA 解密
-     *
-     * @param isPublicKey true 为公钥,false 为私钥
-     * @param secret      密钥,通常传递的密钥为方便查看,通常为 base64 转码后的字符串,所以通常需要进行 base64 解码,
-     *                    -----BEGIN PUBLIC KEY----- 与 -----END PUBLIC KEY----- 或
-     *                    -----BEGIN PRIVATE KEY----- 与 -----END PRIVATE KEY----- 之间的字符串为 base64 编码后的密钥,
-     *                    注意 base64 不能带有换行符和空格
-     *                    eg:
-     *                    公钥:
-     *                    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCrsFwBUPGFEp/dVLlAEbvmJXoM5bP3foggPMXj1N4mXBaVUfsrf0vI0VNGNW6P+cPm+t5VDlr7hazZknxR26dBvxzR+Qt31NMKuCpe13HTl+ee+3wPeIOgobQC2v9AI7Y9JrOz/2qnhwnNJIHcDi9tQmV9uZL0JcGlt6GR9BIOsQIDAQAB
-     *                    私钥:
-     *                    MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAKuwXAFQ8YUSn91UuUARu+Ylegzls/d+iCA8xePU3iZcFpVR+yt/S8jRU0Y1bo/5w+b63lUOWvuFrNmSfFHbp0G/HNH5C3fU0wq4Kl7XcdOX5577fA94g6ChtALa/0Ajtj0ms7P/aqeHCc0kgdwOL21CZX25kvQlwaW3oZH0Eg6xAgMBAAECgYEAlkckATLsdGI88+p4zA+5vFUJY8ibogJq/Gy1ehqU6FaqncDIbOZbW0d98HJMeFFSnBbyDNkn4gi7pyWFE9GDr6RLwrAinn/IBVXF/Hsz/TvxAHAG8XJdKvSFu6H9RCqryLPKMuNT7rXVc4WAI72qDnGA+sxcEc00CKDylkRVTRECQQDkh94UtgM4yAAw/u0thNHBLJas/EYh4C0xJL2gkaRN+3WDuaZhyoLhlgxHqg/w4QI/k+mtlEBapd+sTgoIaZEjAkEAwFNonpowCJDB4nZarzCSKex6UNu2TbOL7HEjK4AzI7hxtEd6f9+Tgq2H3o7jfbqcqAgO1lukdCqU6gUdiK1AGwJAcjKGwli1wXEHz3QENyPQ4TQT0zt5HEJ2ssEGVS+SKDnI3lsuDl3xCyM83a7Yqmj2A6k5MzkK84FCBUs17kA6ewJBALU7pCGY0Fyx9FJwDyJ5VbL16YlakZ8E630CXA74/rfRbixhEvl++KUy2w8JfSwUdt0MwtaSgxUIr00bRuptwDMCQHXpZEhYAzIFlzHm7q2ZA1SG0UVA5WE+TEp7UY8BEEVkiMw8sf8eTNgK3UPdBPcyRIs7esEvf8EnOonrpcxYZAc=
-     * @param decrypt     待解密的数据
-     * @return 解密后的 byte 数组,可通过 new String() 转换后方便查看
-     */
-    public static byte[] rsaDecrypt(boolean isPublicKey, byte[] secret, byte[] decrypt) {
-        try {
-            KeyFactory keyFactory = KeyFactory.getInstance("RSA");
-            Key key;
-            if (isPublicKey) {
-                key = keyFactory.generatePublic(new X509EncodedKeySpec(secret));
-            } else {
-                key = keyFactory.generatePrivate(new PKCS8EncodedKeySpec(secret));
-            }
-            Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1PADDING");
-            cipher.init(Cipher.DECRYPT_MODE, key);
-            return cipher.doFinal(decrypt);
-        } catch (GeneralSecurityException e) {
-            e.printStackTrace();
-        }
-        return null;
-    }
-
-
-    /**
-     * 加密
-     *
-     * @param originalFile
-     * @param encryptFile
-     * @param aesSecret
-     */
-    public static void encryptFile(File originalFile, File encryptFile, String aesSecret) {
-        FileInputStream in = null;
-        FileOutputStream out = null;
-        try {
-            if (!encryptFile.exists()) {
-                encryptFile.getParentFile().mkdirs();
-            }
-            encryptFile.createNewFile();
-            in = new FileInputStream(originalFile);
-            byte[] original = new byte[in.available()];
-            in.read(original);
-            byte[] head = ByteArrayUtil.int2ByteArray((int) originalFile.length());
-            byte[] encrypt = EncryptUtil.aesEncrypt(aesSecret, original);
-            out = new FileOutputStream(encryptFile);
-            out.write(head);
-            out.flush();
-            out.write(encrypt);
-            out.flush();
-        } catch (Exception e) {
-            e.printStackTrace();
-        } finally {
-            if (in != null) {
-                try {
-                    in.close();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-            if (out != null) {
-                try {
-                    out.close();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-        }
-    }
-
-    /**
-     * 解密
-     *
-     * @param encryptFile
-     * @param aesSecret
-     */
-    public static void decryptFile(File encryptFile,String aesSecret) {
-        // 解密文件
-        File decryptFile = new File(FilePathUtil.getMediaRecorderDecryptLocalPath());
-        ShowLogUtil.info("desSecret--->start");
-        FileInputStream fileInputStream = null;
-        FileOutputStream fileOutputStream = null;
-        try {
-            if (!decryptFile.exists()) {
-                decryptFile.getParentFile().mkdirs();
-            }
-            decryptFile.createNewFile();
-            fileInputStream = new FileInputStream(encryptFile);
-            byte[] head = new byte[4];
-            fileInputStream.read(head);
-            ShowLogUtil.info("head.length--->" + head.length);
-            byte[] original = new byte[fileInputStream.available()];
-            ShowLogUtil.info("original.length--->" + original.length);
-            fileInputStream.read(original);
-            byte[] decrypt = EncryptUtil.aesDecrypt(aesSecret, original);
-            ShowLogUtil.info("decrypt.length--->" + decrypt.length);
-            fileOutputStream = new FileOutputStream(decryptFile);
-            fileOutputStream.write(decrypt);
-            fileOutputStream.flush();
-        } catch (Exception e) {
-            e.printStackTrace();
-        } finally {
-            if (fileInputStream != null) {
-                try {
-                    fileInputStream.close();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-            if (fileOutputStream != null) {
-                try {
-                    fileOutputStream.close();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-        }
-        ShowLogUtil.info("decryptFile.length()--->" + decryptFile.length());
-    }
-
-}
Index: app/src/main/java/com/future/message/java/Panda.java
===================================================================
--- app/src/main/java/com/future/message/java/Panda.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/Panda.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,15 +0,0 @@
-package com.future.message.java;
-
-import com.future.message.util.ShowLogUtil;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/19 09:52
- * Description:
- */
-public class Panda {
-    public void eat() {
-        ShowLogUtil.info("熊猫吃竹子");
-    }
-}
Index: app/src/main/java/com/future/message/util/AudioRecordManager.java
===================================================================
--- app/src/main/java/com/future/message/util/AudioRecordManager.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/AudioRecordManager.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,92 +0,0 @@
-package com.future.message.util;
-
-import android.media.AudioFormat;
-import android.media.AudioManager;
-import android.media.AudioRecord;
-import android.media.MediaRecorder;
-import android.util.Log;
-
-import java.io.BufferedOutputStream;
-import java.io.DataOutputStream;
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.IOException;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/3 20:41
- * Description: 录音管理类
- */
-public enum AudioRecordManager {
-    SINGLETON;
-    // 采样率
-    private final int mSampleRateInHz = 44100;
-    // 声道
-    private final int mChannelConfig = AudioFormat.CHANNEL_IN_MONO;
-    // 分辨率
-    private final int mAudioFormat = AudioFormat.ENCODING_PCM_16BIT;
-    // 音频源
-    private final int mAudioSource = MediaRecorder.AudioSource.MIC;
-
-    private AudioManager.OnAudioFocusChangeListener onAudioFocusChangeListener;
-    private File mRecordingFile;
-    // 录音缓存大小
-    private int mRecordBufSize;
-    private AudioRecord mAudioRecord;
-
-
-    public void init() {
-        mRecordBufSize = AudioRecord.getMinBufferSize(mSampleRateInHz, mChannelConfig, mAudioFormat);
-        mAudioRecord = new AudioRecord(mAudioSource, mSampleRateInHz, mChannelConfig, mAudioFormat, mRecordBufSize);
-        mRecordingFile = new File(FilePathUtil.getAudioRecordLocalPath());
-        if (!mRecordingFile.exists()) {
-            mRecordingFile.getParentFile().mkdirs();
-        }
-        try {
-            mRecordingFile.createNewFile();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
-    public void startRecording() {
-        ShowLogUtil.info("Record", "startRecording");
-        if (mAudioRecord == null || mAudioRecord.getState() == AudioRecord.STATE_UNINITIALIZED) {
-            return;
-        }
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                try {
-                    DataOutputStream dos = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(mRecordingFile, true)));
-                    byte[] buffer = new byte[mRecordBufSize];
-                    mAudioRecord.startRecording();
-                    while (mAudioRecord.getRecordingState() == AudioRecord.RECORDSTATE_RECORDING) {
-                        int bufferReadResult = mAudioRecord.read(buffer, 0, mRecordBufSize);
-                        for (int i = 0; i < bufferReadResult; i++) {
-                            dos.write(buffer[i]);
-                        }
-                    }
-                    dos.close();
-                    ShowLogUtil.info("Record", "dos");
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-
-            }
-        }).start();
-    }
-
-    public void stopRecording() {
-        ShowLogUtil.info("Record", "stopRecording");
-        if (mAudioRecord == null) return;
-        if (mAudioRecord.getRecordingState() == AudioRecord.RECORDSTATE_RECORDING) {
-            mAudioRecord.stop();
-        }
-        if (mAudioRecord.getState() == AudioRecord.STATE_INITIALIZED) {
-            mAudioRecord.release();
-        }
-    }
-}
Index: app/src/main/java/com/future/message/MainActivity.java
===================================================================
--- app/src/main/java/com/future/message/MainActivity.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/MainActivity.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,462 +0,0 @@
-package com.future.message;
-
-import android.Manifest;
-import android.app.Service;
-import android.bluetooth.BluetoothAdapter;
-import android.bluetooth.BluetoothDevice;
-import android.content.ComponentName;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.content.ServiceConnection;
-import android.os.Bundle;
-import android.os.IBinder;
-import android.text.TextUtils;
-import android.util.ArraySet;
-import android.view.MotionEvent;
-import android.view.View;
-import android.widget.Button;
-
-import androidx.annotation.NonNull;
-import androidx.lifecycle.Lifecycle;
-
-import com.future.message.algorithm.SolutionArray;
-import com.future.message.algorithm.SolutionLinkedList;
-import com.future.message.algorithm.SolutionTreeNode;
-import com.future.message.algorithm.bean.ListNode;
-import com.future.message.algorithm.bean.TreeNode;
-import com.future.message.base.BaseActivity;
-import com.future.message.base.SayHello;
-import com.future.message.base.Test;
-import com.future.message.base.service.MyService;
-import com.future.message.bean.FruitBean;
-import com.future.message.constant.Constant;
-import com.future.message.receiver.ScanBlueReceiver;
-import com.future.message.receiver.callback.ScanBtCallBack;
-import com.future.message.util.AudioRecordManager;
-import com.future.message.util.BluetoothManager;
-import com.future.message.util.CustomPermission;
-import com.future.message.util.FileUtil;
-import com.future.message.util.MediaRecorderManager;
-import com.future.message.java.ReflexUtil;
-import com.future.message.util.ShowLogUtil;
-
-import java.io.File;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.List;
-import java.util.TreeSet;
-import java.util.concurrent.ConcurrentHashMap;
-
-import static com.future.message.constant.Constant.LOCATION_PERMISSION;
-import static com.future.message.constant.Constant.RECORD_AUDIO_CODE;
-import static com.future.message.constant.Constant.RECORD_AUDIO_PERMISSION;
-
-public class MainActivity extends BaseActivity {
-
-    private Button mBtnMediaRecorder;
-    private Button mBtnAudioRecord;
-    private View.OnTouchListener mOnTouchListener = new View.OnTouchListener() {
-        @Override
-        public boolean onTouch(View v, MotionEvent event) {
-            if (!hasPermission(RECORD_AUDIO_PERMISSION)) {
-                requestPermission(RECORD_AUDIO_CODE, RECORD_AUDIO_PERMISSION);
-                return false;
-            }
-            switch (v.getId()) {
-                case R.id.btn_media_recorder:
-                    switch (event.getAction()) {
-                        case MotionEvent.ACTION_DOWN:
-                            MediaRecorderManager.SINGLETON.startRecord(new MediaRecorderManager.IOnMediaRecordListener() {
-                                @Override
-                                public void onStart() {
-                                    ShowLogUtil.info("开始录音啦");
-                                }
-
-                                @Override
-                                public void onStop() {
-                                    ShowLogUtil.info("结束录音啦");
-                                }
-
-                                @Override
-                                public void onError(Exception e) {
-                                    ShowLogUtil.info("录音出错啦");
-                                }
-
-                                @Override
-                                public void onVolumeChange(int curVolume) {
-                                    ShowLogUtil.info("录音声音变化啦 " + curVolume);
-                                }
-                            });
-                            break;
-                        case MotionEvent.ACTION_UP:
-                            MediaRecorderManager.SINGLETON.stopRecord();
-                            break;
-                    }
-                    break;
-                case R.id.btn_audio_record:
-                    switch (event.getAction()) {
-                        case MotionEvent.ACTION_DOWN:
-                            AudioRecordManager.SINGLETON.init();
-                            AudioRecordManager.SINGLETON.startRecording();
-                            break;
-
-                        case MotionEvent.ACTION_UP:
-                            AudioRecordManager.SINGLETON.stopRecording();
-                            break;
-                    }
-                    break;
-            }
-            return false;
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
-        initView();
-        setListener();
-        initData();
-    }
-
-    @Override
-    protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {
-        super.onRestoreInstanceState(savedInstanceState);
-    }
-
-    private void initView() {
-        mBtnMediaRecorder = findViewById(R.id.btn_media_recorder);
-        mBtnAudioRecord = findViewById(R.id.btn_audio_record);
-    }
-
-    private void setListener() {
-        mBtnMediaRecorder.setOnTouchListener(mOnTouchListener);
-        mBtnAudioRecord.setOnTouchListener(mOnTouchListener);
-        // 子线程跳转界面
-        mBtnMediaRecorder.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                new Thread(new Runnable() {
-                    @Override
-                    public void run() {
-                        startActivity(new Intent(MainActivity.this, TextViewLinkActivity.class));
-                    }
-                }).start();
-            }
-        });
-        findViewById(R.id.btn_start_service).setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = new Intent(MainActivity.this, MyService.class);
-                startService(intent);
-            }
-        });
-        findViewById(R.id.btn_stop_service).setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = new Intent(MainActivity.this, MyService.class);
-                stopService(intent);
-            }
-        });
-        findViewById(R.id.bind_service).setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = new Intent(MainActivity.this, MyService.class);
-                bindService(intent, mServiceConnection, FLAG_SERVICE_CONNECTION);
-
-            }
-        });
-        findViewById(R.id.unbind_service).setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                try {
-                    unbindService(mServiceConnection);
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        });
-    }
-
-    private int FLAG_SERVICE_CONNECTION = 0;
-    private ServiceConnection mServiceConnection = new ServiceConnection() {
-        @Override
-        public void onServiceConnected(ComponentName name, IBinder service) {
-            ShowLogUtil.info("onServiceConnected");
-            MyService.MyBinder binder = (MyService.MyBinder) service;
-            int progress = binder.getProgress();
-            ShowLogUtil.info("progress=" + progress);
-        }
-
-        @Override
-        public void onServiceDisconnected(ComponentName name) {
-            ShowLogUtil.info("onServiceDisconnected");
-
-        }
-    };
-
-
-    private void initData() {
-        Test.test(SayHello.class);
-
-    }
-
-    @Override
-    public void doRecord() {
-
-    }
-
-    private void doPermission() {
-        new CustomPermission(this, true, new CustomPermission.OnFinishedCheck() {
-            @Override
-            public void finishedCheck() {
-                ShowLogUtil.info("finishedCheck");
-            }
-        }, Manifest.permission.CAMERA);
-
-
-//        if (!hasPermission(new String[]{Manifest.permission.RECORD_AUDIO, Manifest.permission.ACCESS_FINE_LOCATION})) {
-//            requestPermission(RECORD_AUDIO_CODE, new String[]{Manifest.permission.RECORD_AUDIO, Manifest.permission.ACCESS_FINE_LOCATION});
-//        }
-//        boolean palindrome = SolutionString.isPalindrome("A man, a plan, a canal: Panama");
-
-    }
-
-    private void doReflex() {
-        ReflexUtil.getInfo();
-    }
-
-    private void doFile() {
-        File file = FileUtil.createFile();
-//        FileUtil.byteWrite(file);
-//        FileUtil.byteRead(file);
-//        FileUtil.delete(file);
-        ShowLogUtil.info("file.getAbsolutePath()=" + file.getAbsolutePath());
-
-
-//        File newFile = FileUtil.createFile();
-//        FileUtil.byteReadToWrite(file, newFile);
-//        FileUtil.stringWrite(file);
-//        FileUtil.stringRead(file);
-//        File newFile = FileUtil.createFile();
-//        FileUtil.stringReadToWrite(file, newFile);
-    }
-
-    private void doBluetooth() {
-        if (!hasPermission(LOCATION_PERMISSION)) {
-            requestPermission(Constant.LOCATION_CODE, LOCATION_PERMISSION);
-        }
-        boolean isSupport = BluetoothManager.SINGLETON.isSupport();
-        boolean isEnable = BluetoothManager.SINGLETON.isEnable();
-        boolean checkGPSIsOpen = BluetoothManager.SINGLETON.checkGPSIsOpen();
-        ShowLogUtil.info("isSupport=" + isSupport);
-        ShowLogUtil.info("isEnable=" + isEnable);
-        ShowLogUtil.info("checkGPSIsOpen=" + checkGPSIsOpen);
-        if (!isEnable) {
-            BluetoothManager.SINGLETON.openBtAsyn();
-        }
-        if (!checkGPSIsOpen) {
-            BluetoothManager.SINGLETON.openGPS(this);
-        }
-        ScanBlueReceiver scanBlueReceiver = new ScanBlueReceiver(new ScanBtCallBack() {
-            @Override
-            public void onScanStarted() {
-                ShowLogUtil.info("开始扫描");
-            }
-
-            @Override
-            public void onScanFinished() {
-                ShowLogUtil.info("结束扫描");
-            }
-
-            @Override
-            public void onScanning(BluetoothDevice device) {
-                if (!TextUtils.isEmpty(device.getName()))
-                    ShowLogUtil.info("device=" + device.getName());
-                if (TextUtils.equals("“张竟方”的 iPhone", device.getName())) {
-                    BluetoothManager.SINGLETON.pin(device);
-                }
-//                if (!TextUtils.isEmpty(device.getName()))
-//                    ShowLogUtil.info("device=" + device.getName());
-//                if (TextUtils.equals("张竟方的iPhone", device.getName())) {
-//                    BluetoothManager.SINGLETON.pin(device);
-//                    BluetoothManager.SINGLETON.cancelPinBt(device);
-//                }
-            }
-
-            @Override
-            public void onBondRequest(BluetoothDevice device) {
-                ShowLogUtil.info("配对请求");
-
-            }
-
-            @Override
-            public void onBondFail() {
-                ShowLogUtil.info("配对失败");
-            }
-
-            @Override
-            public void onBondBonding() {
-                ShowLogUtil.info("配对中");
-            }
-
-            @Override
-            public void onBondSuccess() {
-                ShowLogUtil.info("配对成功");
-            }
-
-        });
-        IntentFilter filter1 = new IntentFilter(BluetoothAdapter.ACTION_DISCOVERY_STARTED);
-        IntentFilter filter2 = new IntentFilter(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);
-        IntentFilter filter3 = new IntentFilter(BluetoothDevice.ACTION_FOUND);
-        IntentFilter filter4 = new IntentFilter(BluetoothDevice.ACTION_PAIRING_REQUEST);
-        IntentFilter filter5 = new IntentFilter(BluetoothDevice.ACTION_BOND_STATE_CHANGED);
-        registerReceiver(scanBlueReceiver, filter1);
-        registerReceiver(scanBlueReceiver, filter2);
-        registerReceiver(scanBlueReceiver, filter3);
-        registerReceiver(scanBlueReceiver, filter4);
-        registerReceiver(scanBlueReceiver, filter5);
-        BluetoothManager.SINGLETON.scanBt();
-    }
-
-    private void doTreeNode() {
-        TreeNode root = new TreeNode();
-        root.val = 3;
-        TreeNode left = new TreeNode();
-        left.val = 9;
-        TreeNode right = new TreeNode();
-        right.val = 20;
-        TreeNode leftLeft = new TreeNode();
-        leftLeft.val = 9;
-        TreeNode leftLeftLeft = new TreeNode();
-        leftLeftLeft.val = 9;
-        TreeNode leftLeftRight = new TreeNode();
-        leftLeftRight.val = 100;
-        TreeNode rightLeft = new TreeNode();
-        rightLeft.val = 15;
-        TreeNode rightRight = new TreeNode();
-        rightRight.val = 7;
-        root.left = left;
-        root.right = right;
-        root.left.left = leftLeft;
-        root.left.left.left = leftLeftLeft;
-        root.left.left.right = leftLeftRight;
-        root.right.left = rightLeft;
-        root.right.right = rightRight;
-        List<List<Integer>> lists = SolutionTreeNode.levelOrder(root);
-        for (int i = 0; i < lists.size(); i++) {
-            for (int j = 0; j < lists.get(i).size(); j++) {
-                ShowLogUtil.info("i=" + i + ",j=" + j + "," + lists.get(i).get(j));
-            }
-        }
-
-
-        //        TreeNode root = new TreeNode();
-//        root.val = 3;
-//        TreeNode left = new TreeNode();
-//        left.val = 9;
-//        TreeNode right = new TreeNode();
-//        right.val = 20;
-//        root.left = left;
-//        root.right = right;
-//        TreeNode rightLeft = new TreeNode();
-//        rightLeft.val = 15;
-//        TreeNode rightRight = new TreeNode();
-//        rightRight.val = 7;
-//        root.right.left = rightLeft;
-//        root.right.right = rightRight;
-
-//        List<List<Integer>> lists = SolutionTree.levelOrder(root);
-//        for (int i = 0; i < lists.size(); i++) {
-//            ShowLogUtil.info(" ");
-//            for (int j = 0; j < lists.get(i).size(); j++) {
-//                ShowLogUtil.info("i=" + i + ",j=" + j +","+ lists.get(i).get(j));
-//            }
-//        }
-    }
-
-    private void doListNode() {
-        ListNode listNode1 = new ListNode(1);
-        ListNode listNode2 = new ListNode(2);
-        ListNode listNode3 = new ListNode(3);
-        ListNode listNode4 = new ListNode(4);
-        ListNode listNode5 = new ListNode(5);
-        listNode1.next = listNode2;
-        listNode2.next = listNode3;
-        listNode3.next = listNode4;
-        listNode4.next = listNode5;
-        SolutionLinkedList.removeNthFromEnd(listNode1, 3);
-
-        //        ListNode l1 = new ListNode(1);
-//        ListNode l2 = new ListNode(1);
-//        ListNode l3 = new ListNode(1);
-//        ListNode l4 = new ListNode(1);
-//        ListNode l5 = new ListNode(1);
-//        ListNode l6 = new ListNode(1);
-//        l1.next = l2;
-//        l2.next = l3;
-//        l3.next = l4;
-//        l4.next = l5;
-//        l5.next = l6;
-//        l6.next = null;
-//        boolean hasCycle = SolutionLinkedList.hasCycle(l1);
-//        ShowLogUtil.info("hasCycle=" + hasCycle);
-    }
-
-    private void doQueue() {
-
-//        MyQueue q = new MyQueue();
-//        q.enQueue(5);
-//        q.enQueue(3);
-//        if (q.isEmpty() == false) {
-//            ShowLogUtil.info(q.Front());
-//        }
-//        q.deQueue();
-//        if (q.isEmpty() == false) {
-//            ShowLogUtil.info(q.Front());
-//        }
-//        q.deQueue();
-//        if (q.isEmpty() == false) {
-//            ShowLogUtil.info(q.Front());
-//        }
-//        // 1. Initialize a queue.
-//        Queue<Integer> q = new LinkedList();
-//        // 2. Get the first element - return null if queue is empty.
-//        ShowLogUtil.info("The first element is: " + q.peek());
-//        // 3. Push new element.
-//        q.offer(5);
-//        q.offer(13);
-//        q.offer(8);
-//        q.offer(6);
-//        // 4. Pop an element.
-//        q.poll();
-//        // 5. Get the first element.
-//        ShowLogUtil.info("The first element is: " + q.peek());
-//        // 7. Get the size of the queue.
-//        ShowLogUtil.info("The size is: " + q.size());
-//        MyCircularQueue obj = new MyCircularQueue(5);
-//        boolean param_1 = obj.enQueue(1);
-//        boolean param_7 = obj.enQueue(1);
-//        boolean param_8 = obj.enQueue(1);
-//        boolean param_9 = obj.enQueue(1);
-//        boolean param_10 = obj.enQueue(1);
-//        boolean param_11 = obj.enQueue(1);
-//        ShowLogUtil.info("param_1="+param_1);
-//        ShowLogUtil.info("param_7="+param_7);
-//        ShowLogUtil.info("param_8="+param_8);
-//        ShowLogUtil.info("param_9="+param_9);
-//        ShowLogUtil.info("param_10="+param_10);
-//        ShowLogUtil.info("param_11="+param_11);
-//        boolean param_2 = obj.deQueue();
-//        ShowLogUtil.info("param_2="+param_2);
-//        int param_3 = obj.Front();
-//        ShowLogUtil.info("param_3="+param_3);
-//        int param_4 = obj.Rear();
-//        ShowLogUtil.info("param_4="+param_4);
-//        boolean param_5 = obj.isEmpty();
-//        ShowLogUtil.info("param_5="+param_5);
-//        boolean param_6 = obj.isFull();
-//        ShowLogUtil.info("param_6="+param_6);
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/future/message/receiver/ReadTask.java
===================================================================
--- app/src/main/java/com/future/message/receiver/ReadTask.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/receiver/ReadTask.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,69 +0,0 @@
-package com.future.message.receiver;
-
-import android.bluetooth.BluetoothSocket;
-import android.os.AsyncTask;
-import android.text.TextUtils;
-
-import com.future.message.receiver.callback.ReadCallBack;
-
-import java.io.BufferedInputStream;
-import java.io.IOException;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/2/26 17:16
- * Description:
- */
-public class ReadTask extends AsyncTask<String, Integer, String> {
-    private ReadCallBack callback;
-    private BluetoothSocket mBluetoothSocket;
-
-    public ReadTask(ReadCallBack callback, BluetoothSocket socket) {
-        this.callback = callback;
-        this.mBluetoothSocket = socket;
-    }
-
-    @Override
-    protected String doInBackground(String... strings) {
-        BufferedInputStream in = null;
-        try {
-            StringBuffer sb = new StringBuffer();
-            in = new BufferedInputStream(mBluetoothSocket.getInputStream());
-            int length = 0;
-            byte[] buf = new byte[1024];
-            while ((length = in.read()) != -1) {
-                sb.append(new String(buf, 0, length));
-            }
-            return sb.toString();
-        } catch (IOException e) {
-            e.printStackTrace();
-        } finally {
-            if (in != null) {
-                try {
-                    in.close();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-        }
-        return "读取失败";
-    }
-
-    @Override
-    protected void onPreExecute() {
-        if (callback != null) callback.onStart();
-    }
-
-    @Override
-    protected void onPostExecute(String s) {
-        if (callback != null) {
-            if (TextUtils.equals("读取失败",s)){
-                callback.onFinished(false,s);
-            }else {
-                callback.onFinished(true,s);
-            }
-
-        }
-    }
-}
Index: app/src/main/java/com/future/message/view/DrawQuadToView.java
===================================================================
--- app/src/main/java/com/future/message/view/DrawQuadToView.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/view/DrawQuadToView.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,83 +0,0 @@
-package com.future.message.view;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Paint;
-import android.graphics.Path;
-import android.util.AttributeSet;
-import android.view.MotionEvent;
-import android.view.View;
-
-import androidx.annotation.Nullable;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/22 14:39
- * Description:
- */
-public class DrawQuadToView extends View {
-    private Paint mPaint;
-    private int eventX,eventY;
-    private int centerX,centerY;
-    private int startX,startY;
-    private int endX,endY;
-
-    public DrawQuadToView(Context context) {
-        super(context);
-        init();
-    }
-
-    public DrawQuadToView(Context context, @Nullable AttributeSet attrs) {
-        super(context, attrs);
-        init();
-    }
-
-    private void init() {
-        mPaint = new Paint();
-        mPaint.setAntiAlias(true);
-    }
-
-    @Override
-    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
-        super.onSizeChanged(w, h, oldw, oldh);
-
-    }
-
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-        mPaint.setColor(Color.GRAY);
-        //画3个点
-        canvas.drawCircle(startX,startY,8,mPaint);
-        canvas.drawCircle(endX,endY,8,mPaint);
-        canvas.drawCircle(eventX,eventY,8,mPaint);
-
-        //绘制连线
-        mPaint.setStrokeWidth(3);
-        canvas.drawLine(startX,centerY,eventX,eventY,mPaint);
-        canvas.drawLine(endX,centerY,eventX,eventY,mPaint);
-
-        //画二阶贝塞尔曲线
-        mPaint.setColor(Color.GREEN);
-        mPaint.setStyle(Paint.Style.STROKE);
-        Path path = new Path();
-        path.moveTo(startX,startY);
-        path.quadTo(eventX,eventY,endX,endY);
-        canvas.drawPath(path,mPaint);
-    }
-
-    @Override
-    public boolean onTouchEvent(MotionEvent event) {
-        switch (event.getAction()){
-            case MotionEvent.ACTION_DOWN:
-            case MotionEvent.ACTION_MOVE:
-                eventX = (int) event.getX();
-                eventY = (int) event.getY();
-                invalidate();
-                break;
-        }
-        return true;
-    }
-}
Index: app/src/main/java/com/future/message/view/DrinkWaterView.java
===================================================================
--- app/src/main/java/com/future/message/view/DrinkWaterView.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/view/DrinkWaterView.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,151 +0,0 @@
-package com.future.message.view;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Paint;
-import android.graphics.Path;
-import android.graphics.RectF;
-import android.util.AttributeSet;
-import android.util.DisplayMetrics;
-import android.util.Log;
-import android.view.View;
-
-import androidx.annotation.Nullable;
-
-import com.future.message.util.ShowLogUtil;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/22 11:11
- * Description:
- */
-public class DrinkWaterView extends View {
-
-    //画笔
-    private Paint mPaint;
-
-    private Path mPath, trianglePath1, trianglePath2;
-    //屏幕宽高 密度dpi
-    private float sWidth, sHeight, sDensityDpi;
-    //下面圆的半径 和 进度三角形边长
-    private float mRaduis, triangleR;
-    //进度弧形的其实角度和旋转角度
-    private float startAngle, sweepAngle;
-    //圆的圆点坐标
-    private float pointerX, pointerY;
-    //上部分的三角形三个顶点坐标  1 顶  2 左 3 右
-    private float mTriangleX1, mTriangleX2, mTriangleX3, mTriangleY1, mTriangleY2, mTriangleY3;
-    //控制三角形进度的高度值
-    private float triangleHeight;
-    //进度弧形的外切矩形
-    private RectF progressRectF;
-
-    public DrinkWaterView(Context context) {
-        this(context, null);
-    }
-
-    public DrinkWaterView(Context context, @Nullable AttributeSet attrs) {
-        super(context, attrs);
-
-        //关闭硬件加速
-        setLayerType(LAYER_TYPE_SOFTWARE, null);
-
-        //设备宽高和dpi密度
-        DisplayMetrics displayMetrics = getResources().getDisplayMetrics();
-        sWidth = displayMetrics.widthPixels;
-        sHeight = displayMetrics.heightPixels;
-        //320为我的测试机dpi密度，以次绘制视图
-        sDensityDpi = displayMetrics.densityDpi / 320;
-
-        //圆心坐标赋值
-        pointerX = pointerY = Math.min(sWidth, sHeight) / 2;
-        //半径和三角形边长赋值
-        mRaduis = pointerX / 5;
-        //赋值顶点坐标
-        mTriangleX1 = pointerX;
-        mTriangleY1 = (float) (pointerY - 1.5 * mRaduis * Math.sin(Math.PI / 3));
-        mTriangleX2 = (float) (pointerX - mRaduis * Math.cos(Math.PI / 3));
-        mTriangleX3 = (float) (pointerX + mRaduis * Math.cos(Math.PI / 3));
-        mTriangleY2 = mTriangleY3 = (float) (pointerY - mRaduis * Math.sin(Math.PI / 3));
-
-        //初始化画笔 去锯齿
-        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
-        //初始化
-        mPath = new Path();
-        trianglePath1 = new Path();
-        trianglePath2 = new Path();
-        // 初始化速度范围的2个扇形外切矩形
-        progressRectF = new RectF(pointerX - mRaduis + 8 * sDensityDpi, pointerY - mRaduis + 8 * sDensityDpi,
-                pointerX + mRaduis - 8 * sDensityDpi, pointerY + mRaduis - 8 * sDensityDpi);
-        ShowLogUtil.info("pointerX=" + pointerX);
-        ShowLogUtil.info("pointerY=" + pointerY);
-        ShowLogUtil.info("sDensityDpi=" + sDensityDpi);
-        ShowLogUtil.info("mRaduis=" + mRaduis);
-        ShowLogUtil.info("pointerX - mRaduis + 8 * sDensityDpi=" + (pointerX - mRaduis + 8 * sDensityDpi));
-        ShowLogUtil.info("pointerY - mRaduis + 8 * sDensityDpi=" + (pointerY - mRaduis + 8 * sDensityDpi));
-        ShowLogUtil.info("pointerX + mRaduis - 8 * sDensityDpi=" + (pointerX + mRaduis - 8 * sDensityDpi));
-        ShowLogUtil.info("pointerY + mRaduis - 8 * sDensityDpi=" + (pointerY + mRaduis - 8 * sDensityDpi));
-        //初始化起始角度
-        startAngle = 90;
-
-        //计算进度三角形边长
-//        triangleR = (float) (8 * Math.sqrt(3) / 3);
-        triangleR = mRaduis - 8 * sDensityDpi;
-        Log.e("triangleR===", triangleR + "");
-
-    }
-
-
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-
-        canvas.drawColor(Color.WHITE);
-
-        //设置画笔颜色和样式
-        mPaint.setColor(0xFFDEE0DD);
-        mPaint.setStyle(Paint.Style.FILL);
-        //绘制圆
-        canvas.drawCircle(pointerX, pointerY, mRaduis, mPaint);
-        //绘制顶部三角形
-        mPath.moveTo(mTriangleX1, mTriangleY1);
-        mPath.lineTo(mTriangleX2, mTriangleY2);
-        mPath.lineTo(mTriangleX3, mTriangleY3);
-        //lineto起点
-        mPath.close();
-        canvas.drawPath(mPath, mPaint);
-
-
-        //修改画笔颜色
-        mPaint.setColor(0xFF13B5E8);
-        startAngle -= 5;
-        sweepAngle += 10;
-//        canvas.drawArc(progressRectF, 295, 310, false, mPaint);
-        canvas.drawArc(progressRectF, -90, 360, false, mPaint);
-
-
-
-//        if (sweepAngle < 310) {
-//            canvas.drawArc(progressRectF, startAngle, sweepAngle, false, mPaint);
-//            //100毫秒后重绘
-//            postInvalidateDelayed(100);
-//        } else {
-//            canvas.drawArc(progressRectF, -90, 360, false, mPaint);
-//
-//            trianglePath1.moveTo(mTriangleX1, (float) (mTriangleY1 + mRaduis * Math.sin(Math.PI / 3) / 3));
-//            trianglePath1.lineTo(mTriangleX2 + 2 * (mRaduis / 2 - triangleR / 2), mTriangleY2 + mRaduis / 2 - triangleR / 2);
-//            trianglePath1.lineTo(mTriangleX3 - 2 * (mRaduis / 2 - triangleR / 2), mTriangleY3 + mRaduis / 2 - triangleR / 2);
-//            trianglePath1.close();
-//            canvas.drawPath(trianglePath1, mPaint);
-//
-//            startAngle = 90;
-//            sweepAngle = 0;
-//            triangleHeight = 0;
-//            //500毫秒后重绘
-//            postInvalidateDelayed(500);
-//        }
-
-    }
-}
Index: app/src/main/java/com/future/message/java/ThrowableUtil.java
===================================================================
--- app/src/main/java/com/future/message/java/ThrowableUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/ThrowableUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,19 +0,0 @@
-package com.future.message.java;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/19 09:29
- * Description:
- */
-public class ThrowableUtil {
-    public static void throwable() throws Error{
-        Throwable t1 = new Error();
-        Throwable t2 = new Exception();
-        Throwable t3 = new RuntimeException();
-        Throwable t4 = new IndexOutOfBoundsException();
-        Throwable t5 = new NullPointerException();
-        Throwable t6 = new ClassCastException();
-        throw new Error();
-    }
-}
Index: app/src/main/java/com/future/message/receiver/callback/ReadCallBack.java
===================================================================
--- app/src/main/java/com/future/message/receiver/callback/ReadCallBack.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/receiver/callback/ReadCallBack.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,12 +0,0 @@
-package com.future.message.receiver.callback;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/2/26 17:18
- * Description:
- */
-public interface ReadCallBack {
-    void onStart();
-    void onFinished(boolean isSuccess,String s);
-}
Index: app/src/main/java/com/future/message/util/CustomPermission.java
===================================================================
--- app/src/main/java/com/future/message/util/CustomPermission.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/CustomPermission.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,211 +0,0 @@
-package com.future.message.util;
-
-import android.Manifest;
-import android.content.Context;
-import android.os.Build;
-import android.text.TextUtils;
-
-import androidx.core.content.PermissionChecker;
-import androidx.fragment.app.FragmentActivity;
-import androidx.fragment.app.FragmentManager;
-
-import com.future.message.R;
-
-import java.util.Arrays;
-import java.util.List;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/10 09:15
- * Description:
- */
-public class CustomPermission {
-    // 是否循环检查，true循环检查，false不是。默认为不是
-    protected boolean mIsCircleCheck;
-    protected FragmentActivity mFragmentActivity;
-    // 完成检查，回调完成接口
-    protected CustomPermission.OnFinishedCheck mOnFinishedCheck;
-    // 记录弹出系统弹框之前是否是"不再提示"
-    protected boolean mInitShouldShowRequestPermissionRationale = true;
-    private String[] mPermissions;
-    private String[] mDeniedPermissions;
-
-    public CustomPermission(FragmentActivity fragmentActivity, String... permission) {
-        this(fragmentActivity, false, permission);
-    }
-
-    public CustomPermission(FragmentActivity fragmentActivity, CustomPermission.OnFinishedCheck onFinishedCheck, String... permission) {
-        this(fragmentActivity, false, onFinishedCheck, permission);
-    }
-
-    /**
-     * @param fragmentActivity FragmentActivity的上下文
-     * @param isCircleCheck    是否循环检查
-     */
-    public CustomPermission(FragmentActivity fragmentActivity, boolean isCircleCheck, String... permission) {
-        this.mFragmentActivity = fragmentActivity;
-        this.mIsCircleCheck = isCircleCheck;
-        this.mPermissions = permission;
-        handleCheck();
-    }
-
-    /**
-     * @param fragmentActivity FragmentActivity的上下文
-     * @param isCircleCheck    是否循环检查
-     */
-    public CustomPermission(FragmentActivity fragmentActivity, boolean isCircleCheck, CustomPermission.OnFinishedCheck onFinishedCheck, String... permission) {
-        this.mFragmentActivity = fragmentActivity;
-        this.mIsCircleCheck = isCircleCheck;
-        this.mOnFinishedCheck = onFinishedCheck;
-        this.mPermissions = permission;
-        handleCheck();
-    }
-
-    /**
-     * 处理检查权限或服务
-     */
-    public void handleCheck() {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-            for (String permission : mPermissions) {
-                // 有"不再提示"的记录一下
-                if (!mFragmentActivity.shouldShowRequestPermissionRationale(permission)) {
-                    mInitShouldShowRequestPermissionRationale = false;
-                }
-            }
-        }
-        String[] deniedPermissions = new String[mPermissions.length];
-        int index = 0;
-        for (String permission : mPermissions) {
-            if (!checkPermission(App.getInstance(), permission)) {
-                deniedPermissions[index++] = permission;
-            }
-        }
-        mDeniedPermissions = Arrays.copyOfRange(deniedPermissions, 0, index);
-        if (mDeniedPermissions.length == 0) {
-            // 获取到所有权限，完成检查
-            finished();
-        } else {
-//            requestDialog();
-        }
-    }
-
-    private boolean checkPermission(Context context, String permission) {
-        return (PermissionChecker.checkSelfPermission(context, permission) == 0);
-    }
-//
-//    /**
-//     * 请求弹框
-//     */
-//    public void requestDialog() {
-//        // 系统权限的请求框
-//        PermissionUtil.requestPermission(mFragmentActivity.getSupportFragmentManager(), new IOnRequestPermissionResultCallBack() {
-//            @Override
-//            public void onSuccess() {
-//                isCircle();
-//            }
-//
-//            @Override
-//            public void onFailure(List<String> list) {
-//                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
-//                    boolean shouldShowRequestPermissionRationale = true;
-//                    // 遍历集合，获取有"不再提示"的权限
-//                    for (String deniedPermission : list) {
-//                        if (!mFragmentActivity.shouldShowRequestPermissionRationale(deniedPermission)) {
-//                            shouldShowRequestPermissionRationale = false;
-//                        }
-//                    }
-//                    if (shouldShowRequestPermissionRationale) {
-//                        isCircle();
-//                    } else {
-//                        if (mInitShouldShowRequestPermissionRationale) {
-//                            isCircle();
-//                        } else {
-//                            // 有"来自系统权限弹框"的"不再提示"
-//                            customDontShowAgainPermissionsDialog(list);
-//                        }
-//                    }
-//                } else {
-//                    isCircle();
-//                }
-//            }
-//        }, mDeniedPermissions);
-//    }
-//
-//    ;
-//
-//
-//    /**
-//     * 自定义不再提示弹框
-//     */
-//    public void customDontShowAgainPermissionsDialog(List<String> dontShowAgainPermissions) {
-//        PermissionDialog.newInstance(createDontShowAgainPermissionsText(dontShowAgainPermissions))
-//                .setOnSettingActivityResultListener(new PermissionDialog.OnSettingActivityResultListener() {
-//                    @Override
-//                    public void onSettingActivityResult() {
-//                        isCircle();
-//                    }
-//                })
-//                .show(mFragmentActivity.getSupportFragmentManager());
-//    }
-//
-//    /**
-//     * 创建不再提示自定义弹框的提示语
-//     *
-//     * @param dontShowAgainPermissions
-//     * @return
-//     */
-//    private String createDontShowAgainPermissionsText(List<String> dontShowAgainPermissions) {
-//        StringBuilder stringBuilder = new StringBuilder();
-//        for (String permission : dontShowAgainPermissions) {
-//            if (TextUtils.equals(permission, Manifest.permission.CAMERA)) {
-//                stringBuilder.append(App.getInstance().getString(R.string.common_permission_denied_camera)).append("\n");
-//            }
-//            if (TextUtils.equals(permission, Manifest.permission.ACCESS_FINE_LOCATION)) {
-//                stringBuilder.append(App.getInstance().getString(R.string.common_permission_denied_access_fine_location)).append("\n");
-//            }
-//            if (TextUtils.equals(permission, Manifest.permission.RECORD_AUDIO)) {
-//                stringBuilder.append(App.getInstance().getString(R.string.common_permission_denied_record_audio)).append("\n");
-//            }
-//            if (TextUtils.equals(permission, Manifest.permission.WRITE_EXTERNAL_STORAGE)) {
-//                stringBuilder.append(App.getInstance().getString(R.string.common_permission_denied_external_storage)).append("\n");
-//            }
-//        }
-//        return stringBuilder.toString();
-//    }
-
-    /**
-     * 是否循环检查权限
-     */
-    public final void isCircle() {
-        if (!mIsCircleCheck) {
-            // 仅检查一次
-            finished();
-        } else {
-            // 循环查一次
-            handleCheck();
-        }
-    }
-
-    /**
-     * 完成权限检查
-     */
-    public final void finished() {
-        // 完成检查
-        if (mOnFinishedCheck != null) {
-            mOnFinishedCheck.finishedCheck();
-        }
-    }
-
-
-    public interface OnFinishedCheck {
-        void finishedCheck();
-    }
-
-    public interface IOnRequestPermissionResultCallBack {
-
-
-    }
-
-
-}
Index: app/src/main/java/com/future/message/constant/Constant.java
===================================================================
--- app/src/main/java/com/future/message/constant/Constant.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/constant/Constant.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,17 +0,0 @@
-package com.future.message.constant;
-
-import android.Manifest;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/3 19:50
- * Description: 常量
- */
-public class Constant {
-    public static final int RECORD_AUDIO_CODE = 0x01;
-    public static final int LOCATION_CODE = 0x02;
-    public static final String[] RECORD_AUDIO_PERMISSION = new String[]{Manifest.permission.RECORD_AUDIO};
-    public static final String[] LOCATION_PERMISSION = new String[]{Manifest.permission.ACCESS_FINE_LOCATION};
-
-}
Index: app/src/main/java/com/future/message/util/BluetoothManager.java
===================================================================
--- app/src/main/java/com/future/message/util/BluetoothManager.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/BluetoothManager.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,155 +0,0 @@
-package com.future.message.util;
-
-import android.app.AlertDialog;
-import android.bluetooth.BluetoothAdapter;
-import android.bluetooth.BluetoothDevice;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.location.LocationManager;
-import android.provider.Settings;
-
-import androidx.fragment.app.FragmentActivity;
-
-import com.future.message.receiver.ConnectBlueTask;
-import com.future.message.receiver.callback.ConnectBtCallBack;
-
-import java.lang.reflect.Method;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/23 14:26
- * Description: 蓝牙管理类
- */
-public enum BluetoothManager {
-    SINGLETON;
-    private BluetoothAdapter mBluetoothAdapter;
-
-    BluetoothManager() {
-        mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
-    }
-
-    public boolean isSupport() {
-        return mBluetoothAdapter != null;
-    }
-
-    public boolean isEnable() {
-        return isSupport() && mBluetoothAdapter.isEnabled();
-    }
-
-    public void openBtAsyn() {
-        if (isSupport()) {
-            mBluetoothAdapter.enable();
-        }
-    }
-
-    public void openBtSync(FragmentActivity context) {
-        if (isSupport()) {
-            Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
-            context.startActivityForResult(enableBtIntent, 0);
-        }
-    }
-
-    public boolean checkGPSIsOpen() {
-        LocationManager locationManager = (LocationManager) App.getInstance().getSystemService(Context.LOCATION_SERVICE);
-        if (locationManager == null) return false;
-        return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);
-    }
-
-    public void openGPS(final FragmentActivity context) {
-        new AlertDialog.Builder(context)
-                .setTitle("提示")
-                .setMessage("当前手机扫描蓝牙需要打开定位功能。")
-                .setNegativeButton("取消",
-                        new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                context.finish();
-                            }
-                        })
-                .setPositiveButton("前往设置",
-                        new DialogInterface.OnClickListener() {
-                            @Override
-                            public void onClick(DialogInterface dialog, int which) {
-                                Intent intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);
-                                context.startActivityForResult(intent, 0);
-                            }
-                        })
-
-                .setCancelable(false)
-                .show();
-    }
-
-    public void scanBt() {
-        if (!isEnable()) return;
-        if (mBluetoothAdapter.isDiscovering()) {
-            mBluetoothAdapter.cancelDiscovery();
-        }
-        mBluetoothAdapter.startDiscovery();
-    }
-
-    public void cancelScanBt() {
-        if (isSupport() && mBluetoothAdapter.isDiscovering()) {
-            mBluetoothAdapter.cancelDiscovery();
-        }
-    }
-
-    /**
-     * 配对
-     *
-     * @param device
-     */
-    public void pin(BluetoothDevice device) {
-        if (device == null) return;
-        if (!isEnable()) return;
-        cancelScanBt();
-        // 如果没有配对才去配对
-        if (device.getBondState() == BluetoothDevice.BOND_NONE) {
-            try {
-                Method createBondMethod = device.getClass().getMethod("createBond");
-                Boolean returnValue = (Boolean) createBondMethod.invoke(device);
-                returnValue.booleanValue();
-            } catch (Exception e) {
-                e.printStackTrace();
-            }
-        }
-    }
-
-    public void cancelPinBt(BluetoothDevice device) {
-        if (device == null) return;
-        if (!isEnable()) return;
-        // 如果没有配对就不用取消配对了
-        if (device.getBondState() != BluetoothDevice.BOND_NONE) {
-            try {
-                Method createBondMethod = device.getClass().getMethod("createBond");
-                Boolean returnValue = (Boolean) createBondMethod.invoke(device);
-                returnValue.booleanValue();
-            } catch (Exception e) {
-                e.printStackTrace();
-            }
-        }
-    }
-
-    /**
-     * 连接 (配对之后调用)
-     *
-     * @param device
-     * @param callBack
-     */
-    public void connect(BluetoothDevice device, ConnectBtCallBack callBack) {
-        if (device == null) return;
-        if (!isEnable()) return;
-        cancelScanBt();
-        new ConnectBlueTask(callBack).execute(device);
-    }
-
-    public void connectMAC(String address, ConnectBtCallBack callBack) {
-        if (!isEnable()) return;
-        BluetoothDevice bluetoothDevice = mBluetoothAdapter.getRemoteDevice(address);
-        connect(bluetoothDevice, callBack);
-
-    }
-
-
-}
Index: app/src/main/java/com/future/message/algorithm/bean/MyHashSet.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/bean/MyHashSet.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/bean/MyHashSet.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,79 +0,0 @@
-package com.future.message.algorithm.bean;
-
-import java.util.Iterator;
-import java.util.LinkedList;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/17 09:25
- * Description: 哈希集合
- * 时间复杂度O(n/b):n哈希表的元素数量，b为链表的数量?
- * 空间复杂度O(n+b)
- * //        MyHashSet myHashSet = new MyHashSet();
- * //        myHashSet.add(1);// set = [1]
- * //        myHashSet.add(2);// set = [1, 2]
- * //        boolean contains1 = myHashSet.contains(1);// 返回 True
- * //        boolean contains2 = myHashSet.contains(3);// 返回 False ，（未找到）
- * //        ShowLogUtil.info("contains1="+contains1);
- * //        ShowLogUtil.info("contains3="+contains2);
- * //        myHashSet.add(2);// set = [1, 2]
- * //        boolean contains3 = myHashSet.contains(2);// 返回 True
- * //        ShowLogUtil.info("contains2="+contains3);
- * //        myHashSet.remove(2);// set = [1]
- * //        boolean contains4 = myHashSet.contains(2);// 返回 False ，（已移除）
- * //        ShowLogUtil.info("contains2="+contains4);
- */
-public class MyHashSet {
-    public static final int BASE = 700;
-    LinkedList[] data;
-
-    public MyHashSet() {
-        data = new LinkedList[BASE];
-        for (int i = 0; i < BASE; i++) {
-            data[i] = new LinkedList();
-        }
-    }
-
-    public void add(int key) {
-        int hash = hash(key);
-        LinkedList linkedList = data[hash];
-        Iterator it = linkedList.iterator();
-        while (it.hasNext()) {
-            int element = (int) it.next();
-            if (element == key) {
-                return;
-            }
-        }
-        data[hash].addLast(key);
-    }
-
-    public boolean contains(int key) {
-        int hash = hash(key);
-        LinkedList linkedList = data[hash];
-        Iterator it = linkedList.iterator();
-        while (it.hasNext()) {
-            int element = (int) it.next();
-            if (element == key) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    public void remove(int key) {
-        int hash = hash(key);
-        Iterator<Integer> it = data[hash].iterator();
-        while (it.hasNext()) {
-            Integer element = it.next();
-            if (element == key) {
-                data[hash].remove(element);
-                return;
-            }
-        }
-    }
-
-    public int hash(int key) {
-        return key % BASE;
-    }
-}
Index: app/src/main/java/com/future/message/util/App.java
===================================================================
--- app/src/main/java/com/future/message/util/App.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/App.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,22 +0,0 @@
-package com.future.message.util;
-
-import android.app.Application;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/3 18:03
- * Description: 程序入口
- */
-public class App extends Application {
-    private static App mApplication = null;
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        mApplication = this;
-    }
-
-    public static App getInstance(){
-        return mApplication;
-    }
-}
Index: app/src/main/java/com/future/message/algorithm/bean/MyQueue.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/bean/MyQueue.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/bean/MyQueue.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,42 +0,0 @@
-package com.future.message.algorithm.bean;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/16 17:14
- * Description:
- */
-public class MyQueue {
-    // store elements
-    private List<Integer> data;
-    // a pointer to indicate the start position
-    private int p_start;
-    public MyQueue() {
-        data = new ArrayList<Integer>();
-        p_start = 0;
-    }
-    /** Insert an element into the queue. Return true if the operation is successful. */
-    public boolean enQueue(int x) {
-        data.add(x);
-        return true;
-    };
-    /** Delete an element from the queue. Return true if the operation is successful. */
-    public boolean deQueue() {
-        if (isEmpty() == true) {
-            return false;
-        }
-        p_start++;
-        return true;
-    }
-    /** Get the front item from the queue. */
-    public int Front() {
-        return data.get(p_start);
-    }
-    /** Checks whether the queue is empty or not. */
-    public boolean isEmpty() {
-        return p_start >= data.size();
-    }
-}
Index: app/src/main/java/com/future/message/algorithm/bean/TreeNode.java
===================================================================
--- app/src/main/java/com/future/message/algorithm/bean/TreeNode.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/algorithm/bean/TreeNode.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,25 +0,0 @@
-package com.future.message.algorithm.bean;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/17 16:48
- * Description:
- */
-public class TreeNode {
-    public int val;
-    public TreeNode left;
-    public TreeNode right;
-    public TreeNode() {
-    }
-
-    public TreeNode(int val) {
-        this.val = val;
-    }
-
-    public TreeNode(int val, TreeNode left, TreeNode right) {
-        this.val = val;
-        this.left = left;
-        this.right = right;
-    }
-}
Index: app/src/main/java/com/future/message/java/SyncUtil.java
===================================================================
--- app/src/main/java/com/future/message/java/SyncUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/SyncUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,15 +0,0 @@
-package com.future.message.java;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/19 11:42
- * Description:
- */
-public class SyncUtil {
-    public synchronized void sync(){
-        synchronized (this) {
-
-        }
-    }
-}
Index: app/src/main/java/com/future/message/okhttp/baseuse/LoggingInterceptor.java
===================================================================
--- app/src/main/java/com/future/message/okhttp/baseuse/LoggingInterceptor.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/okhttp/baseuse/LoggingInterceptor.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,36 +0,0 @@
-package com.future.message.okhttp.baseuse;
-
-import com.future.message.util.ShowLogUtil;
-
-import org.jetbrains.annotations.NotNull;
-
-import java.io.IOException;
-
-import okhttp3.Interceptor;
-import okhttp3.Request;
-import okhttp3.Response;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/30 16:00
- * Description:
- */
-public class LoggingInterceptor implements Interceptor {
-
-    @NotNull
-    @Override
-    public Response intercept(@NotNull Chain chain) throws IOException {
-        Request request = chain.request();
-        long startTime = System.nanoTime();
-        ShowLogUtil.info("request.url()=" + request.url());
-        ShowLogUtil.info("chain.connection()=" + chain.connection());
-        ShowLogUtil.info("request.headers()=" + request.headers());
-        Response response = chain.proceed(request);
-        long endTime = System.nanoTime();
-        ShowLogUtil.info("response.request().url=" + response.request().url());
-        ShowLogUtil.info("endTime-startTime=" + (endTime - startTime));
-        ShowLogUtil.info("response.headers=" + response.headers());
-        return response;
-    }
-}
Index: app/src/main/java/com/future/message/receiver/ConnectBlueTask.java
===================================================================
--- app/src/main/java/com/future/message/receiver/ConnectBlueTask.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/receiver/ConnectBlueTask.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,83 +0,0 @@
-package com.future.message.receiver;
-
-import android.bluetooth.BluetoothDevice;
-import android.bluetooth.BluetoothSocket;
-import android.os.AsyncTask;
-
-import com.future.message.receiver.callback.ConnectBtCallBack;
-import com.future.message.util.ShowLogUtil;
-
-import java.io.IOException;
-import java.util.UUID;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/24 13:49
- * Description:
- */
-public class ConnectBlueTask extends AsyncTask<BluetoothDevice, Integer, BluetoothSocket> {
-    private BluetoothDevice mBluetoothDevice;
-    private ConnectBtCallBack mCallBack;
-    private BluetoothSocket mBluetoothSocket = null;
-
-    public ConnectBlueTask(ConnectBtCallBack callBack) {
-        mCallBack = callBack;
-    }
-
-    @Override
-    protected BluetoothSocket doInBackground(BluetoothDevice... bluetoothDevices) {
-        mBluetoothDevice = bluetoothDevices[0];
-        try {
-            mBluetoothSocket = mBluetoothDevice.createRfcommSocketToServiceRecord(UUID.randomUUID());
-            if (mBluetoothSocket != null && !mBluetoothSocket.isConnected()){
-                ShowLogUtil.info("开始连接 connect");
-                mBluetoothSocket.connect();
-            }
-        } catch (IOException e) {
-            e.printStackTrace();
-        }finally {
-            try {
-                if (mBluetoothSocket != null)
-                    mBluetoothSocket.close();
-            } catch (IOException ioException) {
-                ioException.printStackTrace();
-            }
-        }
-        return mBluetoothSocket;
-    }
-
-    @Override
-    protected void onPreExecute() {
-        super.onPreExecute();
-        ShowLogUtil.info("开始连接");
-    }
-
-    @Override
-    protected void onPostExecute(BluetoothSocket bluetoothSocket) {
-        ShowLogUtil.info("bluetoothSocket.isConnected()=" + bluetoothSocket.isConnected());
-        if (bluetoothSocket != null && bluetoothSocket.isConnected()) {
-            if (mCallBack != null) mCallBack.onConnectSuccess();
-        } else {
-            if (mCallBack != null) mCallBack.onConnectFail();
-        }
-    }
-
-    /**
-     * 断开连接
-     *
-     * @return
-     */
-    public boolean cancelConnect() {
-        if (mBluetoothSocket != null && mBluetoothSocket.isConnected()) {
-            try {
-                mBluetoothSocket.close();
-            } catch (IOException e) {
-                e.printStackTrace();
-                return false;
-            }
-        }
-        mBluetoothSocket = null;
-        return true;
-    }
-}
Index: app/src/main/java/com/future/message/java/CollectionUtil.java
===================================================================
--- app/src/main/java/com/future/message/java/CollectionUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/CollectionUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,198 +0,0 @@
-package com.future.message.java;
-
-import android.util.ArrayMap;
-import android.util.SparseArray;
-
-import androidx.collection.ArraySet;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.EnumSet;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Hashtable;
-import java.util.Iterator;
-import java.util.LinkedHashMap;
-import java.util.LinkedHashSet;
-import java.util.LinkedList;
-import java.util.Map;
-import java.util.Properties;
-import java.util.Queue;
-import java.util.Set;
-import java.util.TreeMap;
-import java.util.TreeSet;
-import java.util.Vector;
-import java.util.WeakHashMap;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/18 16:36
- * Description:
- */
-public class CollectionUtil {
-    public static void function() {
-        new LinkedList<>();
-        new ArrayList<>();
-        new Vector<>();
-
-        new ArraySet<>();
-        new TreeSet<>();
-        new HashSet<>();
-        new LinkedHashSet<>();
-
-        new ArrayMap<>();
-        new TreeMap<>();
-        new HashMap<>();
-        new LinkedHashMap<>();
-        new Hashtable<>();
-        new SparseArray<>();
-        new Properties();
-        new WeakHashMap<>();
-
-
-        //        Vector<Integer> vector = new Vector<>();
-//        vector.add(1);
-//        vector.add(3);
-//        vector.add(4);
-//        for (int i = 0; i < vector.size(); i++) {
-//            ShowLogUtil.info(vector.get(i));
-//        }
-//        for (Integer i : vector) {
-//            ShowLogUtil.info(i);
-//        }
-//        Iterator<Integer> it = vector.iterator();
-//        while (it.hasNext()){
-//            Integer i = it.next();
-//            ShowLogUtil.info(i);
-//        }
-
-//        ArrayList<Integer> arrayList = new ArrayList<>();
-//        arrayList.add(1);
-//        arrayList.add(3);
-//        arrayList.add(4);
-//        arrayList.add(2);
-//        for (int i = 0; i < arrayList.size(); i++) {
-//            ShowLogUtil.info(arrayList.get(i));
-//        }
-//        for (Integer i : arrayList) {
-//            ShowLogUtil.info(i);
-//        }
-//        Iterator<Integer> it = arrayList.iterator();
-//        while (it.hasNext()){
-//            Integer i = it.next();
-//            ShowLogUtil.info(i);
-//        }
-//
-//        Collections.sort(arrayList, new Comparator<Integer>() {
-//            @Override
-//            public int compare(Integer o1, Integer o2) {
-//                if (o1 < o2){
-//                    return -1;
-//                }else {
-//                    return 1;
-//                }
-//            }
-//        });
-//        for (Integer i : arrayList) {
-//            ShowLogUtil.info(i);
-//        }
-
-//        LinkedList<Integer> linkedList = new LinkedList<>();
-//        linkedList.add(1);
-//        linkedList.add(3);
-//        linkedList.add(4);
-//        for (int i = 0; i < linkedList.size(); i++) {
-//            ShowLogUtil.info(linkedList.get(i));
-//        }
-//        for (Integer i : linkedList) {
-//            ShowLogUtil.info(i);
-//        }
-//        Iterator<Integer> it = linkedList.iterator();
-//        while (it.hasNext()){
-//            Integer i = it.next();
-//            ShowLogUtil.info(i);
-//        }
-
-
-//        TreeSet<Integer> treeSet = new TreeSet<>(new Comparator<Integer>() {
-//            @Override
-//            public int compare(Integer o1, Integer o2) {
-//                if (o1 > o2) return 1;
-//                return -1;
-//            }
-//        });
-//        treeSet.add(1);
-//        treeSet.add(3);
-//        treeSet.add(4);
-//        treeSet.add(1);
-//        for (Integer i : treeSet) {
-//            ShowLogUtil.info(i);
-//        }
-//        Iterator<Integer> it = treeSet.iterator();
-//        while (it.hasNext()) {
-//            Integer i = it.next();
-//            ShowLogUtil.info(i);
-//        }
-
-
-//        HashSet<Integer> hashSet = new HashSet<>();
-//        hashSet.add(1);
-//        hashSet.add(3);
-//        hashSet.add(4);
-//        for (Integer i : hashSet) {
-//            ShowLogUtil.info(i);
-//        }
-//        Iterator<Integer> it = hashSet.iterator();
-//        while (it.hasNext()){
-//            Integer i = it.next();
-//            ShowLogUtil.info(i);
-//        }
-
-//        TreeMap<Integer, Integer> treeMap = new TreeMap<>(new Comparator<Integer>() {
-//            @Override
-//            public int compare(Integer o1, Integer o2) {
-//                if (o1 > o2) return 1;
-//                return -1;
-//            }
-//        });
-//        treeMap.put(1, 4);
-//        treeMap.put(5, 8);
-//        treeMap.put(9, 12);
-//        treeMap.put(13, 16);
-//        treeMap.put(1, 20);
-//        Set<Integer> keySet = treeMap.keySet();
-//        for (Integer i : keySet) {
-//            ShowLogUtil.info("key=" + i + ",value=" + treeMap.get(i));
-//        }
-//        Iterator<Integer> it = keySet.iterator();
-//        while (it.hasNext()) {
-//            Integer i = it.next();
-//            ShowLogUtil.info("key=" + i + ",value=" + treeMap.get(i));
-//        }
-//        Collection<Integer> values = treeMap.values();
-//        for (Integer i : values) {
-//            ShowLogUtil.info("value=" + i);
-//        }
-//        Iterator<Integer> itValue = values.iterator();
-//        while (itValue.hasNext()) {
-//            Integer i = itValue.next();
-//            ShowLogUtil.info("value=" + i);
-//        }
-
-//        Set<Map.Entry<Integer, Integer>> entries = treeMap.entrySet();
-//        for (Map.Entry<Integer, Integer> map : entries) {
-//            ShowLogUtil.info("key=" + map.getKey()+",value=" + map.getValue());
-//        }
-//        Iterator<Map.Entry<Integer, Integer>> it = entries.iterator();
-//        while (it.hasNext()){
-//            Map.Entry<Integer, Integer> entry = it.next();
-//            ShowLogUtil.info("key=" + entry.getKey()+",value=" + entry.getValue());
-//        }
-
-        new HashMap<>();
-        new Hashtable<>();
-    }
-}
Index: app/src/main/java/com/future/message/okhttp/baseuse/OKHttpInterceptor.java
===================================================================
--- app/src/main/java/com/future/message/okhttp/baseuse/OKHttpInterceptor.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/okhttp/baseuse/OKHttpInterceptor.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,47 +0,0 @@
-package com.future.message.okhttp.baseuse;
-
-import org.jetbrains.annotations.NotNull;
-
-import java.io.IOException;
-
-import okhttp3.Call;
-import okhttp3.Callback;
-import okhttp3.OkHttpClient;
-import okhttp3.Request;
-import okhttp3.Response;
-import okhttp3.ResponseBody;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/3/30 15:47
- * Description:
- */
-public class OKHttpInterceptor {
-    private OkHttpClient mOkHttpClient = new OkHttpClient.Builder()
-            .addInterceptor(new LoggingInterceptor())
-            .build();
-
-    void get(String url) {
-        Request request = new Request.Builder()
-                .url(url)
-                .header("User-Agent", "OkHttp Example")
-                .build();
-        mOkHttpClient.newCall(request).enqueue(new Callback() {
-            @Override
-            public void onFailure(@NotNull Call call, @NotNull IOException e) {
-
-            }
-
-            @Override
-            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
-                ResponseBody body = response.body();
-                if (body != null) {
-                    body.close();
-                }
-
-            }
-        });
-
-    }
-}
Index: app/src/main/java/com/future/message/util/FilePathUtil.java
===================================================================
--- app/src/main/java/com/future/message/util/FilePathUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/util/FilePathUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,94 +0,0 @@
-package com.future.message.util;
-
-import java.io.File;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.Locale;
-
-/**
- * Author: JfangZ
- * Email:zhangjingfang@jeejio.com
- * Date: 2021/2/4 14:51
- * Description: 文件路工具类
- */
-public class FilePathUtil {
-    /**
-     * Author: JfangZ
-     * Email:zhangjingfang@jeejio.com
-     * Date: 2021/2/4 14:52
-     * Description: 获取录音的本地文件路径
-     */
-    public static String getMediaRecorderLocalPath() {
-        return App.getInstance().getApplicationContext().getCacheDir()
-                + File.separator
-                + "record"
-                + File.separator
-                + "mediaRecorder"
-                + File.separator
-                + new SimpleDateFormat("yyyyMMdd", Locale.CHINA).format(new Date(System.currentTimeMillis()))
-                + File.separator
-                + System.currentTimeMillis()
-                + ".m4a";
-    }
-
-    /**
-     * Author: JfangZ
-     * Email:zhangjingfang@jeejio.com
-     * Date: 2021/2/4 14:52
-     * Description: 获取录音的本地文件路径
-     */
-    public static String getAudioRecordLocalPath() {
-        return App.getInstance().getApplicationContext().getCacheDir()
-                + File.separator
-                + "record"
-                + File.separator
-                + "audioRecord"
-                + File.separator
-                + new SimpleDateFormat("yyyyMMdd", Locale.CHINA).format(new Date(System.currentTimeMillis()))
-                + File.separator
-                + System.currentTimeMillis()
-                + ".m4a";
-    }
-
-    /**
-     * Author: JfangZ
-     * Email:zhangjingfang@jeejio.com
-     * Date: 2021/2/4 14:52
-     * Description: 获取录音加密的本地文件路径
-     */
-    public static String getMediaRecorderEncryptLocalPath() {
-        return App.getInstance().getApplicationContext().getCacheDir()
-                + File.separator
-                + "record"
-                + File.separator
-                + "mediaRecorder"
-                + File.separator
-                + "encrypt"
-                + File.separator
-                + new SimpleDateFormat("yyyyMMdd", Locale.CHINA).format(new Date(System.currentTimeMillis()))
-                + File.separator
-                + System.currentTimeMillis()
-                + ".m4a";
-    }
-
-    /**
-     * Author: JfangZ
-     * Email:zhangjingfang@jeejio.com
-     * Date: 2021/2/4 14:52
-     * Description: 获取录音加密的本地文件路径
-     */
-    public static String getMediaRecorderDecryptLocalPath() {
-        return App.getInstance().getApplicationContext().getCacheDir()
-                + File.separator
-                + "record"
-                + File.separator
-                + "mediaRecorder"
-                + File.separator
-                + "decrypt"
-                + File.separator
-                + new SimpleDateFormat("yyyyMMdd", Locale.CHINA).format(new Date(System.currentTimeMillis()))
-                + File.separator
-                + System.currentTimeMillis()
-                + ".m4a";
-    }
-}
Index: app/src/main/java/com/future/message/java/ReflexUtil.java
===================================================================
--- app/src/main/java/com/future/message/java/ReflexUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/java/ReflexUtil.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,41 +0,0 @@
-package com.future.message.java;
-
-import com.future.message.bean.FruitBean;
-import com.future.message.util.ShowLogUtil;
-
-import java.lang.reflect.Method;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/2/25 11:39
- * Description: 反射
- */
-public class ReflexUtil {
-    public static void getInfo() {
-        // 调用Class3种方式
-        // 第一种
-        // FruitBean.class;
-        // 第二种
-        // Class.forName("com.future.message.bean.FruitBean");
-        // 第三种
-        // FruitBean fruitBean = new FruitBean();
-        // fruitBean.getClass();
-//        FruitBean fruitBean = new FruitBean();
-//        try {
-//            Method method = fruitBean.getClass().getDeclaredMethod("setColor", String.class);
-//            method.invoke(fruitBean,"YELLOW");
-//            ShowLogUtil.info(fruitBean.getColor());
-//        } catch (Exception e) {
-//            ShowLogUtil.info(e.getMessage());
-//            e.printStackTrace();
-//        }
-
-//        ShowLogUtil.info(" FruitBean.class.getName()=" + FruitBean.class.getName());
-//        ShowLogUtil.info(" FruitBean.class.getCanonicalName()=" + FruitBean.class.getCanonicalName());
-//        ShowLogUtil.info(" FruitBean.class.getSimpleName()=" + FruitBean.class.getSimpleName());
-//        for (int i = 0; i < FruitBean.class.getMethods().length; i++) {
-//            ShowLogUtil.info(" FruitBean.class.getMethods() " + i + "=" + FruitBean.class.getMethods()[i].getName());
-//        }
-    }
-}
Index: app/src/main/java/com/future/message/receiver/callback/WriteCallBack.java
===================================================================
--- app/src/main/java/com/future/message/receiver/callback/WriteCallBack.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/future/message/receiver/callback/WriteCallBack.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
@@ -1,12 +0,0 @@
-package com.future.message.receiver.callback;
-
-/**
- * Author: JfangZ
- * Email: zhangjingfang@jeejio.com
- * Date: 2021/2/26 17:56
- * Description:
- */
-public interface WriteCallBack {
-    void onStart();
-    void onFinished(boolean isSuccess,String s);
-}
Index: app/src/androidTest/java/com/future/message/ExampleInstrumentedTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.future.message;\n\nimport android.content.Context;\n\nimport androidx.test.platform.app.InstrumentationRegistry;\nimport androidx.test.ext.junit.runners.AndroidJUnit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n\nimport static org.junit.Assert.*;\n\n/**\n * Instrumented test, which will execute on an Android device.\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\n@RunWith(AndroidJUnit4.class)\npublic class ExampleInstrumentedTest {\n    @Test\n    public void useAppContext() {\n        // Context of the app under test.\n        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n        assertEquals(\"com.future.message\", appContext.getPackageName());\n    }\n}
===================================================================
--- app/src/androidTest/java/com/future/message/ExampleInstrumentedTest.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/androidTest/java/com/awesome/message/ExampleInstrumentedTest.java	(date 1619227702000)
@@ -1,4 +1,4 @@
-package com.future.message;
+package com.awesome.message;
 
 import android.content.Context;
 
@@ -21,6 +21,6 @@
     public void useAppContext() {
         // Context of the app under test.
         Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();
-        assertEquals("com.future.message", appContext.getPackageName());
+        assertEquals("com.awesome.message", appContext.getPackageName());
     }
 }
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\n\nandroid {\n    compileSdkVersion 29\n    buildToolsVersion \"29.0.3\"\n\n    defaultConfig {\n        applicationId \"com.future.message\"\n        minSdkVersion 19\n        targetSdkVersion 29\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\n    implementation 'com.github.zjf19931028:awesomeSDK:1.3'\n    implementation 'androidx.appcompat:appcompat:1.1.0'\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\n    implementation(platform(\"com.squareup.okhttp3:okhttp-bom:4.9.1\"))\n\n    // define any required OkHttp artifacts without version\n    implementation(\"com.squareup.okhttp3:okhttp\")\n    implementation(\"com.squareup.okhttp3:logging-interceptor\")\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/build.gradle	(date 1619227611000)
@@ -24,7 +24,7 @@
 
 dependencies {
     implementation fileTree(dir: "libs", include: ["*.jar"])
-    implementation 'com.github.zjf19931028:awesomeSDK:1.3'
+    implementation 'com.github.zjf19931028:awesomeSDK:1.3.5'
     implementation 'androidx.appcompat:appcompat:1.1.0'
     implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
     implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.1"))
Index: app/src/main/java/com/future/message/base/BaseActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.future.message.base;\n\nimport android.app.Activity;\nimport android.content.pm.PackageManager;\nimport android.util.Log;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.content.ContextCompat;\n\nimport com.future.message.constant.Constant;\nimport com.future.message.util.App;\n\n/**\n * Author: JfangZ\n * Email:zhangjingfang@jeejio.com\n * Date: 2021/2/3 19:48\n * Description: Activity基类\n */\npublic class BaseActivity extends AppCompatActivity {\n\n    public boolean hasPermission(String... permissions) {\n        for (String permission : permissions) {\n            if (ContextCompat.checkSelfPermission(App.getInstance().getApplicationContext(), permission) != PackageManager.PERMISSION_GRANTED) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n\n    public void requestPermission(int code, String... permissions) {\n        ActivityCompat.requestPermissions(this, permissions, code);\n    }\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        switch (requestCode) {\n            case Constant.RECORD_AUDIO_CODE:\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED)\n                    doRecord();\n                break;\n        }\n    }\n\n    /**\n     * Author: JfangZ\n     * Email:zhangjingfang@jeejio.com\n     * Date: 2021/2/3 19:52\n     * Description:做录音操作\n     */\n    public void doRecord() {\n    }\n}\n
===================================================================
--- app/src/main/java/com/future/message/base/BaseActivity.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/awesome/message/base/BaseActivity.java	(date 1619227702000)
@@ -1,16 +1,12 @@
-package com.future.message.base;
+package com.awesome.message.base;
 
-import android.app.Activity;
 import android.content.pm.PackageManager;
-import android.util.Log;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
 
-import com.future.message.constant.Constant;
-import com.future.message.util.App;
 
 /**
  * Author: JfangZ
@@ -37,10 +33,10 @@
     @Override
     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
         switch (requestCode) {
-            case Constant.RECORD_AUDIO_CODE:
-                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED)
-                    doRecord();
-                break;
+//            case Constant.RECORD_AUDIO_CODE:
+//                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED)
+//                    doRecord();
+//                break;
         }
     }
 
Index: app/src/main/java/com/future/message/base/BaseFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.future.message.base;\n\n/**\n * Author: JfangZ\n * Email:zhangjingfang@jeejio.com\n * Date: 2021/2/3 19:48\n * Description: Fragment基类\n */\npublic class BaseFragment {\n}\n
===================================================================
--- app/src/main/java/com/future/message/base/BaseFragment.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/java/com/awesome/message/base/BaseFragment.java	(date 1619227702000)
@@ -1,4 +1,4 @@
-package com.future.message.base;
+package com.awesome.message.base;
 
 /**
  * Author: JfangZ
Index: app/src/test/java/com/future/message/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.future.message;\n\nimport org.junit.Test;\n\nimport static org.junit.Assert.*;\n\n/**\n * Example local unit test, which will execute on the development machine (host).\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\npublic class ExampleUnitTest {\n    @Test\n    public void addition_isCorrect() {\n        assertEquals(4, 2 + 2);\n    }\n}
===================================================================
--- app/src/test/java/com/future/message/ExampleUnitTest.java	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/test/java/com/awesome/message/ExampleUnitTest.java	(date 1619227702000)
@@ -1,4 +1,4 @@
-package com.future.message;
+package com.awesome.message;
 
 import org.junit.Test;
 
Index: app/src/main/java/com/awesome/message/base/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/awesome/message/base/App.java	(date 1619227702000)
+++ app/src/main/java/com/awesome/message/base/App.java	(date 1619227702000)
@@ -0,0 +1,10 @@
+package com.awesome.message.base;
+
+import com.awesome.sdk.BaseApplication;
+
+/**
+ * Created by Alice on 2021/4/24
+ */
+public class App extends BaseApplication {
+
+} 
\ No newline at end of file
Index: app/src/main/java/com/awesome/message/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/awesome/message/MainActivity.java	(date 1619227702000)
+++ app/src/main/java/com/awesome/message/MainActivity.java	(date 1619227702000)
@@ -0,0 +1,25 @@
+package com.awesome.message;
+
+import android.os.Bundle;
+
+import androidx.annotation.NonNull;
+
+
+import com.awesome.message.base.BaseActivity;
+
+public class MainActivity extends BaseActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+    }
+
+    @Override
+    protected void onRestoreInstanceState(@NonNull Bundle savedInstanceState) {
+        super.onRestoreInstanceState(savedInstanceState);
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <!-- Base application theme. -->\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\n        <!-- Customize your theme here. -->\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\n        <item name=\"colorAccent\">@color/colorAccent</item>\n    </style>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision 596c8476c72002b009f92150f7ef68bab10ad947)
+++ app/src/main/res/values/styles.xml	(date 1617808995000)
@@ -7,4 +7,10 @@
         <item name="colorAccent">@color/colorAccent</item>
     </style>
 
+
+    <declare-styleable name="noteAttr">
+        <attr name="lineColor" format="color"/>
+        <attr name="lineWidth" format="dimension"/>
+    </declare-styleable>
+
 </resources>
\ No newline at end of file
